{"version":3,"sources":["../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/combobox/combobox.css?tag=calcite-combobox&encapsulation=shadow","../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/combobox/combobox.js"],"names":["comboboxCss","isGroup","el","tagName","ComboboxItemGroup","itemUidPrefix","chipUidPrefix","labelUidPrefix","listboxUidPrefix","inputUidPrefix","Combobox","[object Object]","hostRef","this","placement","defaultMenuPlacement","internalValueChangeFlag","textInput","mutationObserver","createObserver","updateItems","resizeObserver","setMaxScrollerHeight","guid","inputHeight","ignoreSelectedEventsFlag","openTransitionProp","setFilteredPlacements","flipPlacements","filteredFlipPlacements","filterComputedPlacements","getValue","items","selectedItems","map","item","_a","value","toString","length","onLabelClick","setFocus","keydownHandler","event","key","activeChipIndex","activeItemIndex","allowCustomValues","text","addCustomChip","preventDefault","open","previousChip","nextChip","shiftActiveItemIndex","comboboxInViewport","scrollIntoView","updateActiveItemIndex","scrollToActiveItem","filteredItems","toggleSelection","removeActiveChip","defaultPrevented","submitForm","isMulti","removeLastChip","toggleCloseEnd","removeEventListener","toggleOpenEnd","async","listContainerEl","referenceEl","reposition","maxScrollerHeight","getMaxScrollerHeight","style","maxHeight","minWidth","clientWidth","calciteChipCloseHandler","comboboxItem","selection","find","calciteComboboxChipClose","emit","clickHandler","composedPath","some","node","setInactiveIfNotContained","includes","trim","selectionMode","filterItems","setFloatingEl","floatingEl","connectFloatingUI","setContainerEl","observe","transitionEl","connectOpenCloseComponent","setReferenceEl","inputHandler","target","filteredData","label","textLabel","debounce","filter","data","getCombinedItems","forEach","hidden","parent","grandparent","ancestors","ancestor","getfilteredItems","calciteComboboxFilterChange","internalComboboxChangeEvent","calciteComboboxChange","emitComboboxChange","getItems","groupItems","getGroupItems","getData","getSelectedItems","needsIcon","getNeedsIcon","activeItem","height","calculateSingleItemHeight","offsetHeight","scrollTop","offsetTop","comboboxFocusHandler","focus","comboboxBlurHandler","disabled","form","undefined","placeholder","placeholderIcon","placeholderIconFlipRtl","maxItems","name","overlayPositioning","required","scale","messages","messageOverrides","activeDescendant","effectiveLocale","defaultMessages","updateAfterClose","Array","isArray","selected","isPrimaryPointerButton","newIndex","indexOf","delayed","type","componentLoaded","connectLocalized","connectMessages","childList","subtree","connectLabel","connectForm","openHandler","setUpLoadableComponent","setUpMessages","afterConnectDefaultValueSet","setComponentLoaded","updateHostInteraction","disconnect","_b","disconnectLabel","disconnectForm","disconnectFloatingUI","disconnectOpenCloseComponent","disconnectLocalized","disconnectMessages","updateMessages","bounding","getBoundingClientRect","top","left","right","window","innerWidth","document","documentElement","bottom","innerHeight","clientHeight","calciteComboboxBeforeOpen","calciteComboboxOpen","calciteComboboxBeforeClose","calciteComboboxClose","itemsToProcess","children","from","querySelectorAll","ComboboxChildSelector","child","updateAncestors","resetText","getItemAncestors","getItemChildren","hasActiveChildren","match","sort","a","b","aIdx","bIdx","filterDisabled","icon","ComboboxItem","existingItem","createElement","appendChild","active","Math","max","focusChip","last","chip","querySelector","delta","index","i","chipClasses","chip--active","reverse","pathLabel","join","h","class","closable","iconFlipRtl","id","dismissLabel","removeTag","onCalciteChipClose","title","single","selectedItem","showLabel","input-wrap","input-wrap--single","label--icon","aria-activedescendant","aria-autocomplete","aria-controls","aria-label","getLabelText","input","input--single","input--transparent","input--hidden","input--icon","onBlur","onFocus","onInput","ref","aria-selected","toAriaBoolean","role","tabindex","classes","list-container","FloatingCSS","animation","animationActive","aria-hidden","floating-ui-container","floating-ui-container--active","list","list--hide","selectedIcon","singleSelectionMode","iconAtStart","flipRtl","Host","onClick","aria-expanded","aria-haspopup","aria-live","aria-owns","wrapper","wrapper--single","wrapper--active","onKeyDown","renderIconStart","renderChips","htmlFor","renderInput","renderIconEnd","aria-labelledby","aria-multiselectable","tabIndex","renderListBoxOptions","renderFloatingUIContainer","HiddenFormInputSlot","component","assetsDirs"],"mappings":"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","sourcesContent":["/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n  --calcite-floating-ui-z-index: 600;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([disabled]) {\n  pointer-events: none;\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-ui-opacity-disabled);\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-combobox-input-height: Specifies the height of the component's input.\n*/\n:host {\n  position: relative;\n  display: block;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n:host([scale=s]) {\n  font-size: var(--calcite-font-size--2);\n  --calcite-combobox-item-spacing-unit-l: 0.5rem;\n  --calcite-combobox-item-spacing-unit-s: 0.25rem;\n  --calcite-combobox-input-height: 1.5rem;\n}\n\n:host([scale=m]) {\n  font-size: var(--calcite-font-size--1);\n  --calcite-combobox-item-spacing-unit-l: 0.75rem;\n  --calcite-combobox-item-spacing-unit-s: 0.5rem;\n  --calcite-combobox-input-height: 2rem;\n}\n\n:host([scale=l]) {\n  font-size: var(--calcite-font-size-0);\n  --calcite-combobox-item-spacing-unit-l: 1rem;\n  --calcite-combobox-item-spacing-unit-s: 0.75rem;\n  --calcite-combobox-input-height: 2.75rem;\n}\n\n.wrapper {\n  display: flex;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-ui-border-input);\n  background-color: var(--calcite-ui-foreground-1);\n  color: var(--calcite-ui-text-1);\n  outline-color: transparent;\n  padding-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n:host(:focus-within) .wrapper,\n.wrapper--active {\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: -2px;\n}\n\n.wrapper--single {\n  padding-block: 0;\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n  cursor: pointer;\n  flex-wrap: nowrap;\n}\n\n.grid-input {\n  display: flex;\n  flex-grow: 1;\n  flex-wrap: wrap;\n  align-items: center;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding: 0px;\n}\n\n.input {\n  flex-grow: 1;\n  -webkit-appearance: none;\n          appearance: none;\n  border-style: none;\n  background-color: transparent;\n  padding: 0px;\n  font-family: inherit;\n  color: var(--calcite-ui-text-1);\n  font-size: inherit;\n  block-size: var(--calcite-combobox-input-height);\n  line-height: var(--calcite-combobox-input-height);\n  min-inline-size: 120px;\n  margin-block-end: var(--calcite-combobox-item-spacing-unit-s);\n}\n.input:focus {\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}\n\n.input--transparent {\n  opacity: 0;\n}\n\n.input--single {\n  margin-block: 0px;\n  padding: 0px;\n}\n\n.wrapper--active .input-single {\n  cursor: text;\n}\n\n.input--hidden {\n  pointer-events: none;\n  inline-size: 0px;\n  min-inline-size: 0px;\n  opacity: 0;\n}\n\n.input--icon {\n  padding-block: 0;\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n.input-wrap {\n  display: flex;\n  flex-grow: 1;\n}\n\n.input-wrap--single {\n  flex: 1 1 0%;\n  overflow: hidden;\n}\n\n.label {\n  pointer-events: none;\n  display: flex;\n  max-inline-size: 100%;\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  padding: 0px;\n  font-weight: var(--calcite-font-weight-normal);\n  block-size: var(--calcite-combobox-input-height);\n  line-height: var(--calcite-combobox-input-height);\n}\n\n.label--icon {\n  padding-inline: var(--calcite-combobox-item-spacing-unit-l);\n}\n\n.icon-end,\n.icon-start {\n  display: flex;\n  inline-size: 1rem;\n  cursor: pointer;\n  align-items: center;\n}\n\n.icon-end {\n  flex: none;\n}\n\n.floating-ui-container {\n  --calcite-floating-ui-z-index: 600;\n  display: block;\n  position: absolute;\n  z-index: var(--calcite-floating-ui-z-index);\n  visibility: hidden;\n}\n\n.floating-ui-container .calcite-floating-ui-anim {\n  position: relative;\n  transition: var(--calcite-floating-ui-transition);\n  transition-property: transform, visibility, opacity;\n  opacity: 0;\n  box-shadow: 0 0 16px 0 rgba(0, 0, 0, 0.16);\n  z-index: 1;\n  border-radius: 0.25rem;\n}\n.floating-ui-container[data-placement^=bottom] .calcite-floating-ui-anim {\n  transform: translateY(-5px);\n}\n.floating-ui-container[data-placement^=top] .calcite-floating-ui-anim {\n  transform: translateY(5px);\n}\n.floating-ui-container[data-placement^=left] .calcite-floating-ui-anim {\n  transform: translateX(5px);\n}\n.floating-ui-container[data-placement^=right] .calcite-floating-ui-anim {\n  transform: translateX(-5px);\n}\n.floating-ui-container[data-placement] .calcite-floating-ui-anim--active {\n  opacity: 1;\n  transform: translate(0);\n}\n\n.floating-ui-container--active {\n  visibility: visible;\n}\n\n@media (forced-colors: active) {\n  .wrapper,\n.floating-ui-container--active {\n    border: 1px solid canvasText;\n  }\n}\n.screen-readers-only {\n  position: absolute;\n  inline-size: 1px;\n  block-size: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.list-container {\n  max-block-size: 45vh;\n  overflow-y: auto;\n  background-color: var(--calcite-ui-foreground-1);\n  inline-size: var(--calcite-dropdown-width);\n}\n\n.list {\n  margin: 0px;\n  display: block;\n  padding: 0px;\n}\n\n.list--hide {\n  block-size: 0px;\n  overflow: hidden;\n}\n\n.chip {\n  margin-block: calc(var(--calcite-combobox-item-spacing-unit-s) / 4);\n  margin-inline: 0 var(--calcite-combobox-item-spacing-unit-s);\n  max-inline-size: 100%;\n}\n\n.chip--active {\n  background-color: var(--calcite-ui-foreground-3);\n}\n\n.item {\n  display: block;\n}\n\n::slotted(input[slot=hidden-form-input]) {\n  margin: 0 !important;\n  opacity: 0 !important;\n  outline: none !important;\n  padding: 0 !important;\n  position: absolute !important;\n  inset: 0 !important;\n  transform: none !important;\n  -webkit-appearance: none !important;\n  z-index: -1 !important;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { h, Host } from \"@stencil/core\";\nimport { debounce } from \"lodash-es\";\nimport { filter } from \"../../utils/filter\";\nimport { isPrimaryPointerButton, toAriaBoolean } from \"../../utils/dom\";\nimport { connectFloatingUI, defaultMenuPlacement, disconnectFloatingUI, filterComputedPlacements, FloatingCSS, reposition, updateAfterClose } from \"../../utils/floating-ui\";\nimport { afterConnectDefaultValueSet, connectForm, disconnectForm, HiddenFormInputSlot, submitForm } from \"../../utils/form\";\nimport { guid } from \"../../utils/guid\";\nimport { updateHostInteraction } from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel, getLabelText } from \"../../utils/label\";\nimport { componentLoaded, setComponentLoaded, setUpLoadableComponent } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport { connectOpenCloseComponent, disconnectOpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages } from \"../../utils/t9n\";\nimport { ComboboxChildSelector, ComboboxItem, ComboboxItemGroup } from \"./resources\";\nimport { getItemAncestors, getItemChildren, hasActiveChildren } from \"./utils\";\nconst isGroup = (el) => el.tagName === ComboboxItemGroup;\nconst itemUidPrefix = \"combobox-item-\";\nconst chipUidPrefix = \"combobox-chip-\";\nconst labelUidPrefix = \"combobox-label-\";\nconst listboxUidPrefix = \"combobox-listbox-\";\nconst inputUidPrefix = \"combobox-input-\";\n/**\n * @slot - A slot for adding `calcite-combobox-item`s.\n */\nexport class Combobox {\n  constructor() {\n    //--------------------------------------------------------------------------\n    //\n    //  Private State/Props\n    //\n    //--------------------------------------------------------------------------\n    this.placement = defaultMenuPlacement;\n    this.internalValueChangeFlag = false;\n    this.textInput = null;\n    this.mutationObserver = createObserver(\"mutation\", () => this.updateItems());\n    this.resizeObserver = createObserver(\"resize\", () => this.setMaxScrollerHeight());\n    this.guid = guid();\n    this.inputHeight = 0;\n    this.ignoreSelectedEventsFlag = false;\n    this.openTransitionProp = \"opacity\";\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    // --------------------------------------------------------------------------\n    this.setFilteredPlacements = () => {\n      const { el, flipPlacements } = this;\n      this.filteredFlipPlacements = flipPlacements\n        ? filterComputedPlacements(flipPlacements, el)\n        : null;\n    };\n    this.getValue = () => {\n      const items = this.selectedItems.map((item) => item?.value?.toString());\n      return items?.length ? (items.length > 1 ? items : items[0]) : \"\";\n    };\n    this.onLabelClick = () => {\n      this.setFocus();\n    };\n    this.keydownHandler = (event) => {\n      const { key } = event;\n      switch (key) {\n        case \"Tab\":\n          this.activeChipIndex = -1;\n          this.activeItemIndex = -1;\n          if (this.allowCustomValues && this.text) {\n            this.addCustomChip(this.text, true);\n            event.preventDefault();\n          }\n          else if (this.open) {\n            this.open = false;\n            event.preventDefault();\n          }\n          break;\n        case \"ArrowLeft\":\n          this.previousChip();\n          event.preventDefault();\n          break;\n        case \"ArrowRight\":\n          this.nextChip();\n          event.preventDefault();\n          break;\n        case \"ArrowUp\":\n          event.preventDefault();\n          this.shiftActiveItemIndex(-1);\n          if (!this.comboboxInViewport()) {\n            this.el.scrollIntoView();\n          }\n          break;\n        case \"ArrowDown\":\n          event.preventDefault();\n          if (!this.open) {\n            this.open = true;\n          }\n          this.shiftActiveItemIndex(1);\n          if (!this.comboboxInViewport()) {\n            this.el.scrollIntoView();\n          }\n          break;\n        case \" \":\n          if (!this.textInput.value) {\n            event.preventDefault();\n            this.open = true;\n            this.shiftActiveItemIndex(1);\n          }\n          break;\n        case \"Home\":\n          if (!this.open) {\n            return;\n          }\n          event.preventDefault();\n          this.updateActiveItemIndex(0);\n          this.scrollToActiveItem();\n          if (!this.comboboxInViewport()) {\n            this.el.scrollIntoView();\n          }\n          break;\n        case \"End\":\n          if (!this.open) {\n            return;\n          }\n          event.preventDefault();\n          this.updateActiveItemIndex(this.filteredItems.length - 1);\n          this.scrollToActiveItem();\n          if (!this.comboboxInViewport()) {\n            this.el.scrollIntoView();\n          }\n          break;\n        case \"Escape\":\n          this.open = false;\n          event.preventDefault();\n          break;\n        case \"Enter\":\n          if (this.activeItemIndex > -1) {\n            this.toggleSelection(this.filteredItems[this.activeItemIndex]);\n            event.preventDefault();\n          }\n          else if (this.activeChipIndex > -1) {\n            this.removeActiveChip();\n            event.preventDefault();\n          }\n          else if (this.allowCustomValues && this.text) {\n            this.addCustomChip(this.text, true);\n            event.preventDefault();\n          }\n          else if (!event.defaultPrevented) {\n            if (submitForm(this)) {\n              event.preventDefault();\n            }\n          }\n          break;\n        case \"Delete\":\n        case \"Backspace\":\n          if (this.activeChipIndex > -1) {\n            event.preventDefault();\n            this.removeActiveChip();\n          }\n          else if (!this.text && this.isMulti()) {\n            event.preventDefault();\n            this.removeLastChip();\n          }\n          break;\n      }\n    };\n    this.toggleCloseEnd = () => {\n      this.open = false;\n      this.el.removeEventListener(\"calciteComboboxClose\", this.toggleCloseEnd);\n    };\n    this.toggleOpenEnd = () => {\n      this.open = false;\n      this.el.removeEventListener(\"calciteComboboxOpen\", this.toggleOpenEnd);\n    };\n    this.setMaxScrollerHeight = async () => {\n      const { listContainerEl, open, referenceEl } = this;\n      if (!listContainerEl || !open) {\n        return;\n      }\n      await this.reposition(true);\n      const maxScrollerHeight = this.getMaxScrollerHeight();\n      listContainerEl.style.maxHeight = maxScrollerHeight > 0 ? `${maxScrollerHeight}px` : \"\";\n      listContainerEl.style.minWidth = `${referenceEl.clientWidth}px`;\n      await this.reposition(true);\n    };\n    this.calciteChipCloseHandler = (comboboxItem) => {\n      this.open = false;\n      const selection = this.items.find((item) => item === comboboxItem);\n      if (selection) {\n        this.toggleSelection(selection, false);\n      }\n      this.calciteComboboxChipClose.emit();\n    };\n    this.clickHandler = (event) => {\n      if (event.composedPath().some((node) => node.tagName === \"CALCITE-CHIP\")) {\n        return;\n      }\n      this.open = !this.open;\n      this.updateActiveItemIndex(0);\n      this.setFocus();\n    };\n    this.setInactiveIfNotContained = (event) => {\n      const composedPath = event.composedPath();\n      if (!this.open || composedPath.includes(this.el) || composedPath.includes(this.referenceEl)) {\n        return;\n      }\n      if (this.allowCustomValues && this.text.trim().length) {\n        this.addCustomChip(this.text);\n      }\n      if (this.selectionMode === \"single\") {\n        if (this.textInput) {\n          this.textInput.value = \"\";\n        }\n        this.text = \"\";\n        this.filterItems(\"\");\n        this.updateActiveItemIndex(-1);\n      }\n      this.open = false;\n    };\n    this.setFloatingEl = (el) => {\n      this.floatingEl = el;\n      connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    };\n    this.setContainerEl = (el) => {\n      this.resizeObserver.observe(el);\n      this.listContainerEl = el;\n      this.transitionEl = el;\n      connectOpenCloseComponent(this);\n    };\n    this.setReferenceEl = (el) => {\n      this.referenceEl = el;\n      connectFloatingUI(this, this.referenceEl, this.floatingEl);\n    };\n    this.inputHandler = (event) => {\n      const value = event.target.value;\n      this.text = value;\n      this.filterItems(value);\n      if (value) {\n        this.activeChipIndex = -1;\n      }\n    };\n    this.filterItems = (() => {\n      const find = (item, filteredData) => item &&\n        filteredData.some(({ label, value }) => {\n          if (isGroup(item)) {\n            return value === item.label;\n          }\n          return (value === item.textLabel ||\n            value === item.value ||\n            label === item.textLabel ||\n            label === item.value);\n        });\n      return debounce((text) => {\n        const filteredData = filter(this.data, text);\n        const items = this.getCombinedItems();\n        items.forEach((item) => {\n          const hidden = !find(item, filteredData);\n          item.hidden = hidden;\n          const [parent, grandparent] = item.ancestors;\n          if (find(parent, filteredData) || find(grandparent, filteredData)) {\n            item.hidden = false;\n          }\n          if (!hidden) {\n            item.ancestors.forEach((ancestor) => (ancestor.hidden = false));\n          }\n        });\n        this.filteredItems = this.getfilteredItems();\n        this.calciteComboboxFilterChange.emit();\n      }, 100);\n    })();\n    this.internalComboboxChangeEvent = () => {\n      this.calciteComboboxChange.emit();\n    };\n    this.emitComboboxChange = debounce(this.internalComboboxChangeEvent, 0);\n    this.updateItems = () => {\n      this.items = this.getItems();\n      this.groupItems = this.getGroupItems();\n      this.data = this.getData();\n      this.selectedItems = this.getSelectedItems();\n      this.filteredItems = this.getfilteredItems();\n      this.needsIcon = this.getNeedsIcon();\n      if (!this.allowCustomValues) {\n        this.setMaxScrollerHeight();\n      }\n    };\n    this.scrollToActiveItem = () => {\n      const activeItem = this.filteredItems[this.activeItemIndex];\n      if (!activeItem) {\n        return;\n      }\n      const height = this.calculateSingleItemHeight(activeItem);\n      const { offsetHeight, scrollTop } = this.listContainerEl;\n      if (offsetHeight + scrollTop < activeItem.offsetTop + height) {\n        this.listContainerEl.scrollTop = activeItem.offsetTop - offsetHeight + height;\n      }\n      else if (activeItem.offsetTop < scrollTop) {\n        this.listContainerEl.scrollTop = activeItem.offsetTop;\n      }\n    };\n    this.comboboxFocusHandler = () => {\n      this.textInput?.focus();\n    };\n    this.comboboxBlurHandler = (event) => {\n      this.setInactiveIfNotContained(event);\n    };\n    this.open = false;\n    this.disabled = false;\n    this.form = undefined;\n    this.label = undefined;\n    this.placeholder = undefined;\n    this.placeholderIcon = undefined;\n    this.placeholderIconFlipRtl = false;\n    this.maxItems = 0;\n    this.name = undefined;\n    this.allowCustomValues = undefined;\n    this.overlayPositioning = \"absolute\";\n    this.required = false;\n    this.selectionMode = \"multiple\";\n    this.scale = \"m\";\n    this.value = null;\n    this.flipPlacements = undefined;\n    this.messages = undefined;\n    this.messageOverrides = undefined;\n    this.selectedItems = [];\n    this.filteredItems = [];\n    this.items = [];\n    this.groupItems = [];\n    this.needsIcon = undefined;\n    this.activeItemIndex = -1;\n    this.activeChipIndex = -1;\n    this.activeDescendant = \"\";\n    this.text = \"\";\n    this.effectiveLocale = undefined;\n    this.defaultMessages = undefined;\n  }\n  openHandler(value) {\n    if (!value) {\n      updateAfterClose(this.floatingEl);\n    }\n    if (this.disabled) {\n      this.open = false;\n      return;\n    }\n    this.setMaxScrollerHeight();\n  }\n  handleDisabledChange(value) {\n    if (!value) {\n      this.open = false;\n    }\n  }\n  maxItemsHandler() {\n    this.setMaxScrollerHeight();\n  }\n  overlayPositioningHandler() {\n    this.reposition(true);\n  }\n  valueHandler(value) {\n    if (!this.internalValueChangeFlag) {\n      const items = this.getItems();\n      if (Array.isArray(value)) {\n        items.forEach((item) => (item.selected = value.includes(item.value)));\n      }\n      else if (value) {\n        items.forEach((item) => (item.selected = value === item.value));\n      }\n      else {\n        items.forEach((item) => (item.selected = false));\n      }\n      this.updateItems();\n    }\n  }\n  onMessagesChange() {\n    /*  wired up by t9n util */\n  }\n  flipPlacementsHandler() {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n  selectedItemsHandler() {\n    this.internalValueChangeFlag = true;\n    this.value = this.getValue();\n    this.internalValueChangeFlag = false;\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n  documentClickHandler(event) {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n    this.setInactiveIfNotContained(event);\n  }\n  calciteComboboxItemChangeHandler(event) {\n    if (this.ignoreSelectedEventsFlag) {\n      return;\n    }\n    const target = event.target;\n    const newIndex = this.filteredItems.indexOf(target);\n    this.updateActiveItemIndex(newIndex);\n    this.toggleSelection(target, target.selected);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  async reposition(delayed = false) {\n    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n    return reposition(this, {\n      floatingEl,\n      referenceEl,\n      overlayPositioning,\n      placement,\n      flipPlacements: filteredFlipPlacements,\n      type: \"menu\"\n    }, delayed);\n  }\n  /** Sets focus on the component. */\n  async setFocus() {\n    await componentLoaded(this);\n    this.textInput?.focus();\n    this.activeChipIndex = -1;\n    this.activeItemIndex = -1;\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  connectedCallback() {\n    connectLocalized(this);\n    connectMessages(this);\n    this.internalValueChangeFlag = true;\n    this.value = this.getValue();\n    this.internalValueChangeFlag = false;\n    this.mutationObserver?.observe(this.el, { childList: true, subtree: true });\n    connectLabel(this);\n    connectForm(this);\n    connectOpenCloseComponent(this);\n    this.setFilteredPlacements();\n    this.reposition(true);\n    if (this.open) {\n      this.openHandler(this.open);\n    }\n  }\n  async componentWillLoad() {\n    setUpLoadableComponent(this);\n    this.updateItems();\n    await setUpMessages(this);\n  }\n  componentDidLoad() {\n    afterConnectDefaultValueSet(this, this.getValue());\n    this.reposition(true);\n    setComponentLoaded(this);\n  }\n  componentDidRender() {\n    if (this.el.offsetHeight !== this.inputHeight) {\n      this.reposition(true);\n      this.inputHeight = this.el.offsetHeight;\n    }\n    updateHostInteraction(this);\n  }\n  disconnectedCallback() {\n    this.mutationObserver?.disconnect();\n    this.resizeObserver?.disconnect();\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n    disconnectOpenCloseComponent(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n  /** when search text is cleared, reset active to  */\n  textHandler() {\n    this.updateActiveItemIndex(-1);\n  }\n  effectiveLocaleChange() {\n    updateMessages(this, this.effectiveLocale);\n  }\n  comboboxInViewport() {\n    const bounding = this.el.getBoundingClientRect();\n    return (bounding.top >= 0 &&\n      bounding.left >= 0 &&\n      bounding.right <= (window.innerWidth || document.documentElement.clientWidth) &&\n      bounding.bottom <= (window.innerHeight || document.documentElement.clientHeight));\n  }\n  onBeforeOpen() {\n    this.calciteComboboxBeforeOpen.emit();\n  }\n  onOpen() {\n    this.calciteComboboxOpen.emit();\n  }\n  onBeforeClose() {\n    this.calciteComboboxBeforeClose.emit();\n  }\n  onClose() {\n    this.calciteComboboxClose.emit();\n  }\n  getMaxScrollerHeight() {\n    const items = this.getCombinedItems().filter((item) => !item.hidden);\n    const { maxItems } = this;\n    let itemsToProcess = 0;\n    let maxScrollerHeight = 0;\n    if (items.length > maxItems) {\n      items.forEach((item) => {\n        if (itemsToProcess < maxItems && maxItems > 0) {\n          const height = this.calculateSingleItemHeight(item);\n          if (height > 0) {\n            maxScrollerHeight += height;\n            itemsToProcess++;\n          }\n        }\n      });\n    }\n    return maxScrollerHeight;\n  }\n  calculateSingleItemHeight(item) {\n    if (!item) {\n      return;\n    }\n    let height = item.offsetHeight;\n    // if item has children items, don't count their height twice\n    const children = Array.from(item.querySelectorAll(ComboboxChildSelector));\n    children\n      .map((child) => child?.offsetHeight)\n      .forEach((offsetHeight) => {\n      height -= offsetHeight;\n    });\n    return height;\n  }\n  getCombinedItems() {\n    return [...this.groupItems, ...this.items];\n  }\n  toggleSelection(item, value = !item.selected) {\n    if (!item) {\n      return;\n    }\n    if (this.isMulti()) {\n      item.selected = value;\n      this.updateAncestors(item);\n      this.selectedItems = this.getSelectedItems();\n      this.emitComboboxChange();\n      this.resetText();\n      this.filterItems(\"\");\n    }\n    else {\n      this.ignoreSelectedEventsFlag = true;\n      this.items.forEach((el) => (el.selected = el === item ? value : false));\n      this.ignoreSelectedEventsFlag = false;\n      this.selectedItems = this.getSelectedItems();\n      this.emitComboboxChange();\n      if (this.textInput) {\n        this.textInput.value = item.textLabel;\n      }\n      this.open = false;\n      this.updateActiveItemIndex(-1);\n      this.resetText();\n      this.filterItems(\"\");\n    }\n  }\n  updateAncestors(item) {\n    if (this.selectionMode !== \"ancestors\") {\n      return;\n    }\n    const ancestors = getItemAncestors(item);\n    const children = getItemChildren(item);\n    if (item.selected) {\n      ancestors.forEach((el) => {\n        el.selected = true;\n      });\n    }\n    else {\n      children.forEach((el) => (el.selected = false));\n      [...ancestors].forEach((el) => {\n        if (!hasActiveChildren(el)) {\n          el.selected = false;\n        }\n      });\n    }\n  }\n  getfilteredItems() {\n    return this.items.filter((item) => !item.hidden);\n  }\n  getSelectedItems() {\n    if (!this.isMulti()) {\n      const match = this.items.find(({ selected }) => selected);\n      return match ? [match] : [];\n    }\n    return (this.items\n      .filter((item) => item.selected && (this.selectionMode !== \"ancestors\" || !hasActiveChildren(item)))\n      /** Preserve order of entered tags */\n      .sort((a, b) => {\n      const aIdx = this.selectedItems.indexOf(a);\n      const bIdx = this.selectedItems.indexOf(b);\n      if (aIdx > -1 && bIdx > -1) {\n        return aIdx - bIdx;\n      }\n      return bIdx - aIdx;\n    }));\n  }\n  getData() {\n    return this.items.map((item) => ({\n      filterDisabled: item.filterDisabled,\n      value: item.value,\n      label: item.textLabel\n    }));\n  }\n  getNeedsIcon() {\n    return this.selectionMode === \"single\" && this.items.some((item) => item.icon);\n  }\n  resetText() {\n    if (this.textInput) {\n      this.textInput.value = \"\";\n    }\n    this.text = \"\";\n  }\n  getItems() {\n    const items = Array.from(this.el.querySelectorAll(ComboboxItem));\n    return items.filter((item) => !item.disabled);\n  }\n  getGroupItems() {\n    return Array.from(this.el.querySelectorAll(ComboboxItemGroup));\n  }\n  addCustomChip(value, focus) {\n    const existingItem = this.items.find((el) => el.textLabel === value);\n    if (existingItem) {\n      this.toggleSelection(existingItem, true);\n    }\n    else {\n      if (!this.isMulti()) {\n        this.toggleSelection(this.selectedItems[this.selectedItems.length - 1], false);\n      }\n      const item = document.createElement(ComboboxItem);\n      item.value = value;\n      item.textLabel = value;\n      item.selected = true;\n      this.el.appendChild(item);\n      this.resetText();\n      if (focus) {\n        this.setFocus();\n      }\n      this.updateItems();\n      this.filterItems(\"\");\n      this.emitComboboxChange();\n    }\n  }\n  removeActiveChip() {\n    this.toggleSelection(this.selectedItems[this.activeChipIndex], false);\n    this.setFocus();\n  }\n  removeLastChip() {\n    this.toggleSelection(this.selectedItems[this.selectedItems.length - 1], false);\n    this.setFocus();\n  }\n  previousChip() {\n    if (this.text) {\n      return;\n    }\n    const length = this.selectedItems.length - 1;\n    const active = this.activeChipIndex;\n    this.activeChipIndex = active === -1 ? length : Math.max(active - 1, 0);\n    this.updateActiveItemIndex(-1);\n    this.focusChip();\n  }\n  nextChip() {\n    if (this.text || this.activeChipIndex === -1) {\n      return;\n    }\n    const last = this.selectedItems.length - 1;\n    const newIndex = this.activeChipIndex + 1;\n    if (newIndex > last) {\n      this.activeChipIndex = -1;\n      this.setFocus();\n    }\n    else {\n      this.activeChipIndex = newIndex;\n      this.focusChip();\n    }\n    this.updateActiveItemIndex(-1);\n  }\n  focusChip() {\n    const guid = this.selectedItems[this.activeChipIndex]?.guid;\n    const chip = guid\n      ? this.referenceEl.querySelector(`#${chipUidPrefix}${guid}`)\n      : null;\n    chip?.setFocus();\n  }\n  shiftActiveItemIndex(delta) {\n    const { length } = this.filteredItems;\n    const newIndex = (this.activeItemIndex + length + delta) % length;\n    this.updateActiveItemIndex(newIndex);\n    this.scrollToActiveItem();\n  }\n  updateActiveItemIndex(index) {\n    this.activeItemIndex = index;\n    let activeDescendant = null;\n    this.filteredItems.forEach((el, i) => {\n      if (i === index) {\n        el.active = true;\n        activeDescendant = `${itemUidPrefix}${el.guid}`;\n      }\n      else {\n        el.active = false;\n      }\n    });\n    this.activeDescendant = activeDescendant;\n    if (this.activeItemIndex > -1) {\n      this.activeChipIndex = -1;\n    }\n  }\n  isMulti() {\n    return this.selectionMode !== \"single\";\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  //--------------------------------------------------------------------------\n  renderChips() {\n    const { activeChipIndex, scale, selectionMode, messages } = this;\n    return this.selectedItems.map((item, i) => {\n      const chipClasses = {\n        chip: true,\n        \"chip--active\": activeChipIndex === i\n      };\n      const ancestors = [...getItemAncestors(item)].reverse();\n      const pathLabel = [...ancestors, item].map((el) => el.textLabel);\n      const label = selectionMode !== \"ancestors\" ? item.textLabel : pathLabel.join(\" / \");\n      return (h(\"calcite-chip\", { class: chipClasses, closable: true, icon: item.icon, iconFlipRtl: item.iconFlipRtl, id: item.guid ? `${chipUidPrefix}${item.guid}` : null, key: item.textLabel, messageOverrides: { dismissLabel: messages.removeTag }, onCalciteChipClose: () => this.calciteChipCloseHandler(item), scale: scale, title: label, value: item.value }, label));\n    });\n  }\n  renderInput() {\n    const { guid, disabled, placeholder, selectionMode, selectedItems, open } = this;\n    const single = selectionMode === \"single\";\n    const selectedItem = selectedItems[0];\n    const showLabel = !open && single && !!selectedItem;\n    return (h(\"span\", { class: {\n        \"input-wrap\": true,\n        \"input-wrap--single\": single\n      } }, showLabel && (h(\"span\", { class: {\n        label: true,\n        \"label--icon\": !!selectedItem?.icon\n      }, key: \"label\" }, selectedItem.textLabel)), h(\"input\", { \"aria-activedescendant\": this.activeDescendant, \"aria-autocomplete\": \"list\", \"aria-controls\": `${listboxUidPrefix}${guid}`, \"aria-label\": getLabelText(this), class: {\n        input: true,\n        \"input--single\": true,\n        \"input--transparent\": this.activeChipIndex > -1,\n        \"input--hidden\": showLabel,\n        \"input--icon\": !!this.placeholderIcon\n      }, disabled: disabled, id: `${inputUidPrefix}${guid}`, key: \"input\", onBlur: this.comboboxBlurHandler, onFocus: this.comboboxFocusHandler, onInput: this.inputHandler, placeholder: placeholder, type: \"text\",\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: (el) => (this.textInput = el) })));\n  }\n  renderListBoxOptions() {\n    return this.filteredItems.map((item) => (h(\"li\", { \"aria-selected\": toAriaBoolean(item.selected), id: item.guid ? `${itemUidPrefix}${item.guid}` : null, role: \"option\", tabindex: \"-1\" }, item.textLabel)));\n  }\n  renderFloatingUIContainer() {\n    const { setFloatingEl, setContainerEl, open } = this;\n    const classes = {\n      \"list-container\": true,\n      [FloatingCSS.animation]: true,\n      [FloatingCSS.animationActive]: open\n    };\n    return (h(\"div\", { \"aria-hidden\": \"true\", class: {\n        \"floating-ui-container\": true,\n        \"floating-ui-container--active\": open\n      },\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: setFloatingEl }, h(\"div\", { class: classes,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: setContainerEl }, h(\"ul\", { class: { list: true, \"list--hide\": !open } }, h(\"slot\", null)))));\n  }\n  renderIconStart() {\n    const { selectedItems, placeholderIcon, selectionMode, placeholderIconFlipRtl } = this;\n    const selectedItem = selectedItems[0];\n    const selectedIcon = selectedItem?.icon;\n    const singleSelectionMode = selectionMode === \"single\";\n    const iconAtStart = !this.open && selectedItem\n      ? !!selectedIcon && singleSelectionMode\n      : !!this.placeholderIcon && (!selectedItem || singleSelectionMode);\n    return (iconAtStart && (h(\"span\", { class: \"icon-start\" }, h(\"calcite-icon\", { class: \"selected-icon\", flipRtl: this.open && selectedItem ? selectedItem.iconFlipRtl : placeholderIconFlipRtl, icon: !this.open && selectedItem ? selectedIcon : placeholderIcon, scale: \"s\" }))));\n  }\n  renderIconEnd() {\n    const { open } = this;\n    return (h(\"span\", { class: \"icon-end\" }, h(\"calcite-icon\", { icon: open ? \"chevron-up\" : \"chevron-down\", scale: \"s\" })));\n  }\n  render() {\n    const { guid, label, open } = this;\n    const single = this.selectionMode === \"single\";\n    return (h(Host, { onClick: this.comboboxFocusHandler }, h(\"div\", { \"aria-autocomplete\": \"list\", \"aria-controls\": `${listboxUidPrefix}${guid}`, \"aria-expanded\": toAriaBoolean(open), \"aria-haspopup\": \"listbox\", \"aria-label\": getLabelText(this), \"aria-live\": \"polite\", \"aria-owns\": `${listboxUidPrefix}${guid}`, class: {\n        wrapper: true,\n        \"wrapper--single\": single || !this.selectedItems.length,\n        \"wrapper--active\": open\n      }, onClick: this.clickHandler, onKeyDown: this.keydownHandler, role: \"combobox\",\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.setReferenceEl }, h(\"div\", { class: \"grid-input\" }, this.renderIconStart(), !single && this.renderChips(), h(\"label\", { class: \"screen-readers-only\", htmlFor: `${inputUidPrefix}${guid}`, id: `${labelUidPrefix}${guid}` }, label), this.renderInput()), this.renderIconEnd()), h(\"ul\", { \"aria-labelledby\": `${labelUidPrefix}${guid}`, \"aria-multiselectable\": \"true\", class: \"screen-readers-only\", id: `${listboxUidPrefix}${guid}`, role: \"listbox\", tabIndex: -1 }, this.renderListBoxOptions()), this.renderFloatingUIContainer(), h(HiddenFormInputSlot, { component: this })));\n  }\n  static get is() { return \"calcite-combobox\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"combobox.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"combobox.css\"]\n    };\n  }\n  static get assetsDirs() { return [\"assets\"]; }\n  static get properties() {\n    return {\n      \"open\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, displays and positions the component.\"\n        },\n        \"attribute\": \"open\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"form\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The ID of the form that will be associated with the component.\\n\\nWhen not set, the component will be associated with its ancestor `<form>` element, if any.\"\n        },\n        \"attribute\": \"form\",\n        \"reflect\": true\n      },\n      \"label\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": true,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Accessible name for the component.\"\n        },\n        \"attribute\": \"label\",\n        \"reflect\": false\n      },\n      \"placeholder\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the placeholder text for the input.\"\n        },\n        \"attribute\": \"placeholder\",\n        \"reflect\": false\n      },\n      \"placeholderIcon\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the placeholder icon for the input.\"\n        },\n        \"attribute\": \"placeholder-icon\",\n        \"reflect\": true\n      },\n      \"placeholderIconFlipRtl\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, the icon will be flipped when the element direction is right-to-left (`\\\"rtl\\\"`).\"\n        },\n        \"attribute\": \"placeholder-icon-flip-rtl\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"maxItems\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the maximum number of `calcite-combobox-item`s (including nested children) to display before displaying a scrollbar.\"\n        },\n        \"attribute\": \"max-items\",\n        \"reflect\": true,\n        \"defaultValue\": \"0\"\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the name of the component.\\n\\nRequired to pass the component's `value` on form submission.\"\n        },\n        \"attribute\": \"name\",\n        \"reflect\": true\n      },\n      \"allowCustomValues\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, allows entry of custom values, which are not in the original set of items.\"\n        },\n        \"attribute\": \"allow-custom-values\",\n        \"reflect\": true\n      },\n      \"overlayPositioning\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"OverlayPositioning\",\n          \"resolved\": \"\\\"absolute\\\" | \\\"fixed\\\"\",\n          \"references\": {\n            \"OverlayPositioning\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/floating-ui\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Determines the type of positioning to use for the overlaid content.\\n\\nUsing `\\\"absolute\\\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\\n\\n`\\\"fixed\\\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\\\"fixed\\\"`.\"\n        },\n        \"attribute\": \"overlay-positioning\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"absolute\\\"\"\n      },\n      \"required\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"When `true`, the component must have a value in order for the form to submit.\"\n        },\n        \"attribute\": \"required\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"selectionMode\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Extract<\\n    \\\"single\\\" | \\\"ancestors\\\" | \\\"multiple\\\",\\n    SelectionMode\\n  >\",\n          \"resolved\": \"\\\"ancestors\\\" | \\\"multiple\\\" | \\\"single\\\"\",\n          \"references\": {\n            \"Extract\": {\n              \"location\": \"global\"\n            },\n            \"SelectionMode\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"specify the selection mode\\n- multiple: allow any number of selected items (default)\\n- single: only one selection)\\n- ancestors: like multiple, but show ancestors of selected items as selected, only deepest children shown in chips\"\n        },\n        \"attribute\": \"selection-mode\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"multiple\\\"\"\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"value\": {\n        \"type\": \"string\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"string | string[]\",\n          \"resolved\": \"string | string[]\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The component's value(s) from the selected `calcite-combobox-item`(s).\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": false,\n        \"defaultValue\": \"null\"\n      },\n      \"flipPlacements\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"EffectivePlacement[]\",\n          \"resolved\": \"Placement[]\",\n          \"references\": {\n            \"EffectivePlacement\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/floating-ui\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Defines the available placements that can be used when a flip occurs.\"\n        }\n      },\n      \"messages\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"ComboboxMessages\",\n          \"resolved\": \"{ removeTag: string; }\",\n          \"references\": {\n            \"ComboboxMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/combobox/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Made into a prop for testing purposes only\"\n        }\n      },\n      \"messageOverrides\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"Partial<ComboboxMessages>\",\n          \"resolved\": \"{ removeTag?: string; }\",\n          \"references\": {\n            \"Partial\": {\n              \"location\": \"global\"\n            },\n            \"ComboboxMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/combobox/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Use this property to override individual strings used by the component.\"\n        }\n      },\n      \"selectedItems\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"HTMLCalciteComboboxItemElement[]\",\n          \"resolved\": \"HTMLCalciteComboboxItemElement[]\",\n          \"references\": {\n            \"HTMLCalciteComboboxItemElement\": {\n              \"location\": \"global\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"readonly\",\n              \"text\": undefined\n            }],\n          \"text\": \"Specifies the component's selected items.\"\n        },\n        \"defaultValue\": \"[]\"\n      },\n      \"filteredItems\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"HTMLCalciteComboboxItemElement[]\",\n          \"resolved\": \"HTMLCalciteComboboxItemElement[]\",\n          \"references\": {\n            \"HTMLCalciteComboboxItemElement\": {\n              \"location\": \"global\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"readonly\",\n              \"text\": undefined\n            }],\n          \"text\": \"Specifies the component's filtered items.\"\n        },\n        \"defaultValue\": \"[]\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"items\": {},\n      \"groupItems\": {},\n      \"needsIcon\": {},\n      \"activeItemIndex\": {},\n      \"activeChipIndex\": {},\n      \"activeDescendant\": {},\n      \"text\": {},\n      \"effectiveLocale\": {},\n      \"defaultMessages\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calciteComboboxChange\",\n        \"name\": \"calciteComboboxChange\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the selected item(s) changes.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteComboboxFilterChange\",\n        \"name\": \"calciteComboboxFilterChange\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when text is added to filter the options list.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteComboboxChipClose\",\n        \"name\": \"calciteComboboxChipClose\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when a selected item in the component is closed via its `calcite-chip`.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteComboboxBeforeClose\",\n        \"name\": \"calciteComboboxBeforeClose\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the component is requested to be closed, and before the closing transition begins.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteComboboxClose\",\n        \"name\": \"calciteComboboxClose\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the component is closed and animation is complete.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteComboboxBeforeOpen\",\n        \"name\": \"calciteComboboxBeforeOpen\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the component is added to the DOM but not rendered, and before the opening transition begins.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calciteComboboxOpen\",\n        \"name\": \"calciteComboboxOpen\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the component is open and animation is complete.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"reposition\": {\n        \"complexType\": {\n          \"signature\": \"(delayed?: boolean) => Promise<void>\",\n          \"parameters\": [{\n              \"tags\": [{\n                  \"name\": \"param\",\n                  \"text\": \"delayed\"\n                }],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Updates the position of the component.\",\n          \"tags\": [{\n              \"name\": \"param\",\n              \"text\": \"delayed\"\n            }]\n        }\n      },\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets focus on the component.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"open\",\n        \"methodName\": \"openHandler\"\n      }, {\n        \"propName\": \"disabled\",\n        \"methodName\": \"handleDisabledChange\"\n      }, {\n        \"propName\": \"maxItems\",\n        \"methodName\": \"maxItemsHandler\"\n      }, {\n        \"propName\": \"overlayPositioning\",\n        \"methodName\": \"overlayPositioningHandler\"\n      }, {\n        \"propName\": \"value\",\n        \"methodName\": \"valueHandler\"\n      }, {\n        \"propName\": \"messageOverrides\",\n        \"methodName\": \"onMessagesChange\"\n      }, {\n        \"propName\": \"flipPlacements\",\n        \"methodName\": \"flipPlacementsHandler\"\n      }, {\n        \"propName\": \"selectedItems\",\n        \"methodName\": \"selectedItemsHandler\"\n      }, {\n        \"propName\": \"text\",\n        \"methodName\": \"textHandler\"\n      }, {\n        \"propName\": \"effectiveLocale\",\n        \"methodName\": \"effectiveLocaleChange\"\n      }];\n  }\n  static get listeners() {\n    return [{\n        \"name\": \"pointerdown\",\n        \"method\": \"documentClickHandler\",\n        \"target\": \"document\",\n        \"capture\": false,\n        \"passive\": true\n      }, {\n        \"name\": \"calciteComboboxItemChange\",\n        \"method\": \"calciteComboboxItemChangeHandler\",\n        \"target\": undefined,\n        \"capture\": false,\n        \"passive\": false\n      }];\n  }\n}\n"]}