{"version":3,"sources":["../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/utils/interactive.js"],"names":["noopClick","updateHostInteraction","component","hostIsTabbable","disabled","el","setAttribute","contains","document","activeElement","blur","click","HTMLElement","prototype","call","removeAttribute"],"mappings":";;;;;AAKA,SAASA,KAgBF,SAASC,EAAsBC,EAAWC,EAAiB,OAChE,GAAID,EAAUE,SAAU,CACtBF,EAAUG,GAAGC,aAAa,WAAY,MACtCJ,EAAUG,GAAGC,aAAa,gBAAiB,QAC3C,GAAIJ,EAAUG,GAAGE,SAASC,SAASC,eAAgB,CACjDD,SAASC,cAAcC,OAEzBR,EAAUG,GAAGM,MAAQX,EACrB,OAEFE,EAAUG,GAAGM,MAAQC,YAAYC,UAAUF,MAC3C,UAAWR,IAAmB,WAAY,CACxCD,EAAUG,GAAGC,aAAa,WAAYH,EAAeW,KAAKZ,GAAa,IAAM,WAE1E,GAAIC,IAAmB,KAAM,CAChCD,EAAUG,GAAGC,aAAa,WAAY,UAEnC,GAAIH,IAAmB,MAAO,CACjCD,EAAUG,GAAGU,gBAAgB,iBAK/Bb,EAAUG,GAAGU,gBAAgB","sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nfunction noopClick() {\n  /** noop */\n}\n/**\n * This helper updates the host element to prevent keyboard interaction on its subtree and sets the appropriate aria attribute for accessibility.\n *\n * This should be used in the `componentDidRender` lifecycle hook.\n *\n * **Notes**\n *\n * this util is not needed for simple components whose root element or elements are an interactive component (custom element or native control). For those cases, set the `disabled` props on the root components instead.\n * technically, users can override `tabindex` and restore keyboard navigation, but this will be considered user error\n *\n * @param component\n * @param hostIsTabbable\n */\nexport function updateHostInteraction(component, hostIsTabbable = false) {\n  if (component.disabled) {\n    component.el.setAttribute(\"tabindex\", \"-1\");\n    component.el.setAttribute(\"aria-disabled\", \"true\");\n    if (component.el.contains(document.activeElement)) {\n      document.activeElement.blur();\n    }\n    component.el.click = noopClick;\n    return;\n  }\n  component.el.click = HTMLElement.prototype.click;\n  if (typeof hostIsTabbable === \"function\") {\n    component.el.setAttribute(\"tabindex\", hostIsTabbable.call(component) ? \"0\" : \"-1\");\n  }\n  else if (hostIsTabbable === true) {\n    component.el.setAttribute(\"tabindex\", \"0\");\n  }\n  else if (hostIsTabbable === false) {\n    component.el.removeAttribute(\"tabindex\");\n  }\n  else {\n    // noop for \"managed\" as owning component will manage its tab index\n  }\n  component.el.removeAttribute(\"aria-disabled\");\n}\n"]}