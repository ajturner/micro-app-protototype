{"version":3,"sources":["../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/block-section/resources.js","../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/block-section/block-section.css?tag=calcite-block-section&encapsulation=shadow","../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/block-section/block-section.js"],"names":["CSS","content","invalid","toggle","toggleSwitch","toggleSwitchContent","toggleSwitchText","sectionHeader","sectionHeaderText","statusIcon","valid","ICONS","menuOpen","menuClosedLeft","menuClosedRight","blockSectionCss","BlockSection","[object Object]","hostRef","this","guid","handleHeaderKeyDown","event","isActivationKey","key","toggleSection","preventDefault","stopPropagation","open","calciteBlockSectionToggle","emit","status","undefined","text","toggleDisplay","messages","messageOverrides","effectiveLocale","defaultMessages","updateMessages","connectLocalized","connectMessages","disconnectLocalized","disconnectMessages","setUpMessages","_a","statusIconClasses","h","class","icon","scale","el","dir","getElementDir","arrowIcon","toggleLabel","collapse","expand","regionId","buttonId","headerNode","aria-controls","aria-label","id","onClick","onKeyDown","tabIndex","title","checked","label","renderStatusIcon","name","Host","aria-expanded","toAriaBoolean","aria-labelledby","hidden","assetsDirs"],"mappings":"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","sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nexport const CSS = {\n  content: \"content\",\n  invalid: \"invalid\",\n  toggle: \"toggle\",\n  toggleSwitch: \"toggle--switch\",\n  toggleSwitchContent: \"toggle--switch__content\",\n  toggleSwitchText: \"toggle--switch__text\",\n  sectionHeader: \"section-header\",\n  sectionHeaderText: \"section-header__text\",\n  statusIcon: \"status-icon\",\n  valid: \"valid\"\n};\nexport const TEXT = {\n  collapse: \"Collapse\",\n  expand: \"Expand\"\n};\nexport const ICONS = {\n  menuOpen: \"chevron-down\",\n  menuClosedLeft: \"chevron-left\",\n  menuClosedRight: \"chevron-right\",\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\"\n};\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n  --calcite-floating-ui-z-index: 600;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host {\n  box-sizing: border-box;\n  display: block;\n  background-color: var(--calcite-ui-foreground-1);\n  font-size: var(--calcite-font-size--1);\n  color: var(--calcite-ui-text-2);\n}\n\n:host([open]) {\n  border-width: 0px;\n  border-block-end-width: 1px;\n  border-style: solid;\n  border-block-end-color: var(--calcite-ui-border-3);\n}\n\n:host(:last-child) {\n  border-block-end-width: 0px;\n}\n\n.toggle {\n  inline-size: 100%;\n  border-width: 0px;\n  background-color: transparent;\n  font-family: var(--calcite-sans-family);\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-ui-text-2);\n}\n\n.toggle--switch,\n.section-header {\n  margin-inline: 0px;\n  margin-block: 0.25rem;\n  display: flex;\n  cursor: pointer;\n  -webkit-user-select: none;\n          user-select: none;\n  align-items: center;\n  padding-inline: 0px;\n  padding-block: 0.5rem;\n  font-size: var(--calcite-font-size--1);\n  outline-color: transparent;\n}\n.toggle--switch:focus,\n.section-header:focus {\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: 2px;\n}\n.toggle--switch:hover,\n.section-header:hover {\n  color: var(--calcite-ui-text-1);\n}\n\n.section-header .status-icon {\n  align-self: flex-end;\n}\n\n.section-header__text {\n  margin-inline: 0.75rem;\n  margin-block: 0px;\n  flex: 1 1 auto;\n  text-align: initial;\n  word-wrap: anywhere;\n}\n\n.toggle--switch calcite-switch {\n  pointer-events: none;\n  margin-inline-start: 0.25rem;\n}\n.toggle--switch .status-icon {\n  margin-inline-start: 0.5rem;\n}\n\n.toggle--switch__content {\n  display: flex;\n  flex: 1 1 auto;\n  align-items: center;\n}\n\n.status-icon.valid {\n  color: var(--calcite-ui-success);\n}\n\n.status-icon.invalid {\n  color: var(--calcite-ui-danger);\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { h, Host } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages } from \"../../utils/t9n\";\nimport { CSS, ICONS } from \"./resources\";\n/**\n * @slot - A slot for adding custom content.\n */\nexport class BlockSection {\n  constructor() {\n    this.guid = guid();\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    // --------------------------------------------------------------------------\n    this.handleHeaderKeyDown = (event) => {\n      if (isActivationKey(event.key)) {\n        this.toggleSection();\n        event.preventDefault();\n        event.stopPropagation();\n      }\n    };\n    this.toggleSection = () => {\n      this.open = !this.open;\n      this.calciteBlockSectionToggle.emit();\n    };\n    this.open = false;\n    this.status = undefined;\n    this.text = undefined;\n    this.toggleDisplay = \"button\";\n    this.messages = undefined;\n    this.messageOverrides = undefined;\n    this.effectiveLocale = undefined;\n    this.defaultMessages = undefined;\n  }\n  onMessagesChange() {\n    /* wired up by t9n util */\n  }\n  effectiveLocaleChange() {\n    updateMessages(this, this.effectiveLocale);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  connectedCallback() {\n    connectLocalized(this);\n    connectMessages(this);\n  }\n  disconnectedCallback() {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n  async componentWillLoad() {\n    await setUpMessages(this);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  renderStatusIcon() {\n    const { status } = this;\n    const statusIcon = ICONS[status] ?? false;\n    const statusIconClasses = {\n      [CSS.statusIcon]: true,\n      [CSS.valid]: status == \"valid\",\n      [CSS.invalid]: status == \"invalid\"\n    };\n    return !!statusIcon ? (h(\"calcite-icon\", { class: statusIconClasses, icon: statusIcon, scale: \"s\" })) : null;\n  }\n  render() {\n    const { el, messages, open, text, toggleDisplay } = this;\n    const dir = getElementDir(el);\n    const arrowIcon = open\n      ? ICONS.menuOpen\n      : dir === \"rtl\"\n        ? ICONS.menuClosedLeft\n        : ICONS.menuClosedRight;\n    const toggleLabel = open ? messages.collapse : messages.expand;\n    const { guid } = this;\n    const regionId = `${guid}-region`;\n    const buttonId = `${guid}-button`;\n    const headerNode = toggleDisplay === \"switch\" ? (h(\"div\", { \"aria-controls\": regionId, \"aria-label\": toggleLabel, class: {\n        [CSS.toggle]: true,\n        [CSS.toggleSwitch]: true\n      }, id: buttonId, onClick: this.toggleSection, onKeyDown: this.handleHeaderKeyDown, tabIndex: 0, title: toggleLabel }, h(\"div\", { class: CSS.toggleSwitchContent }, h(\"span\", { class: CSS.toggleSwitchText }, text)), h(\"calcite-switch\", { checked: open, label: toggleLabel, scale: \"s\", tabIndex: -1 }), this.renderStatusIcon())) : (h(\"button\", { \"aria-controls\": regionId, \"aria-label\": toggleLabel, class: {\n        [CSS.sectionHeader]: true,\n        [CSS.toggle]: true\n      }, id: buttonId, name: toggleLabel, onClick: this.toggleSection }, h(\"calcite-icon\", { icon: arrowIcon, scale: \"s\" }), h(\"span\", { class: CSS.sectionHeaderText }, text), this.renderStatusIcon()));\n    return (h(Host, null, headerNode, h(\"section\", { \"aria-expanded\": toAriaBoolean(open), \"aria-labelledby\": buttonId, class: CSS.content, hidden: !open, id: regionId }, h(\"slot\", null))));\n  }\n  static get is() { return \"calcite-block-section\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"block-section.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"block-section.css\"]\n    };\n  }\n  static get assetsDirs() { return [\"assets\"]; }\n  static get properties() {\n    return {\n      \"open\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, expands the component and its contents.\"\n        },\n        \"attribute\": \"open\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"status\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Status\",\n          \"resolved\": \"\\\"idle\\\" | \\\"invalid\\\" | \\\"valid\\\"\",\n          \"references\": {\n            \"Status\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Displays a status-related indicator icon.\"\n        },\n        \"attribute\": \"status\",\n        \"reflect\": true\n      },\n      \"text\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The component header text.\"\n        },\n        \"attribute\": \"text\",\n        \"reflect\": false\n      },\n      \"toggleDisplay\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"BlockSectionToggleDisplay\",\n          \"resolved\": \"\\\"button\\\" | \\\"switch\\\"\",\n          \"references\": {\n            \"BlockSectionToggleDisplay\": {\n              \"location\": \"import\",\n              \"path\": \"./interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the component's toggle display -\\n\\n`\\\"button\\\"` (selectable header), or\\n\\n`\\\"switch\\\"` (toggle switch).\"\n        },\n        \"attribute\": \"toggle-display\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"button\\\"\"\n      },\n      \"messages\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"BlockSectionMessages\",\n          \"resolved\": \"{ collapse: string; expand: string; }\",\n          \"references\": {\n            \"BlockSectionMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/block-section/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Made into a prop for testing purposes only\"\n        }\n      },\n      \"messageOverrides\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"Partial<BlockSectionMessages>\",\n          \"resolved\": \"{ collapse?: string; expand?: string; }\",\n          \"references\": {\n            \"Partial\": {\n              \"location\": \"global\"\n            },\n            \"BlockSectionMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/block-section/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Use this property to override individual strings used by the component.\"\n        }\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"effectiveLocale\": {},\n      \"defaultMessages\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calciteBlockSectionToggle\",\n        \"name\": \"calciteBlockSectionToggle\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emits when the header has been clicked.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"messageOverrides\",\n        \"methodName\": \"onMessagesChange\"\n      }, {\n        \"propName\": \"effectiveLocale\",\n        \"methodName\": \"effectiveLocaleChange\"\n      }];\n  }\n}\n"]}