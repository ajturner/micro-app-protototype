{"version":3,"sources":["../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/rating/function/star.js","../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/rating/rating.css?tag=calcite-rating&encapsulation=shadow","../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/rating/rating.js"],"names":["StarIcon","full","scale","partial","h","class","undefined","icon","ratingCss","Rating","[object Object]","hostRef","this","handleRatingPointerOver","isKeyboardInteraction","handleRatingPointerOut","hoverValue","focusValue","hasFocus","handleRatingFocusIn","selectedInput","value","focusInput","inputRefs","Number","select","handleRatingFocusLeave","handleHostKeyDown","handleInputKeyDown","event","target","currentTarget","inputVal","key","numberKey","emit","isNaN","required","max","handleInputChange","handleLabelPointerOver","newPointerValue","firstChild","handleLabelPointerDown","guid","average","count","disabled","form","messages","messageOverrides","name","readOnly","showChip","effectiveLocale","defaultMessages","newValue","calciteRatingChange","updateMessages","connectLocalized","connectMessages","connectLabel","connectForm","setUpMessages","setUpLoadableComponent","Array","starsMap","from","length","_","i","checked","focused","fraction","hovered","id","selected","idx","setComponentLoaded","disconnectLocalized","disconnectMessages","disconnectLabel","disconnectForm","updateHostInteraction","Host","onBlur","onFocus","onKeyDown","onPointerOut","onPointerOver","rating","map","star","htmlFor","onPointerDown","onChange","type","ref","el","inputFocusRef","style","width","stars","replace","_a","toString","_b","HiddenFormInputSlot","component","setFocus","componentLoaded","focus","assetsDirs"],"mappings":"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","sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { h } from \"@stencil/core\";\nexport const StarIcon = ({ full, scale, partial }) => (h(\"calcite-icon\", { ...{\n    class: partial ? undefined : \"icon\",\n    icon: full ? \"star-f\" : \"star\",\n    scale\n  } }));\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n  --calcite-floating-ui-z-index: 600;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host([disabled]) {\n  pointer-events: none;\n  cursor: default;\n  -webkit-user-select: none;\n          user-select: none;\n  opacity: var(--calcite-ui-opacity-disabled);\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-rating-spacing-unit: The amount of left and right margin spacing between each rating star.\n*/\n:host {\n  position: relative;\n  display: flex;\n  align-items: center;\n  inline-size: -moz-fit-content;\n  inline-size: fit-content;\n}\n\n:host([disabled]) ::slotted([calcite-hydrated][disabled]),\n:host([disabled]) [calcite-hydrated][disabled] {\n  /* prevent opacity stacking */\n  opacity: 1;\n}\n\n:host([scale=s]) {\n  block-size: 1.5rem;\n  --calcite-rating-spacing-unit: 0.25rem;\n}\n\n:host([scale=m]) {\n  block-size: 2rem;\n  --calcite-rating-spacing-unit: 0.5rem;\n}\n\n:host([scale=l]) {\n  block-size: 2.75rem;\n  --calcite-rating-spacing-unit: 0.75rem;\n}\n\n:host([read-only]) {\n  pointer-events: none;\n}\n\n.fieldset {\n  margin: 0;\n  display: flex;\n  border-width: 0;\n  padding: 0;\n  align-items: center;\n  gap: var(--calcite-rating-spacing-unit);\n}\n\n.wrapper {\n  display: inline-block;\n}\n\n.star {\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  color: var(--calcite-ui-border-input);\n}\n\n.focused {\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: 2px;\n}\n\n.average,\n.fraction {\n  color: var(--calcite-ui-warning);\n}\n\n.hovered,\n.selected {\n  color: var(--calcite-ui-brand);\n}\n\n.fraction {\n  transition: all var(--calcite-animation-timing) ease-in-out 0s, outline 0s, outline-offset 0s;\n  position: absolute;\n  pointer-events: none;\n  inset-block-start: 0;\n  overflow: hidden;\n  inset-inline-start: 0;\n}\n\ncalcite-chip {\n  pointer-events: none;\n  cursor: default;\n}\n\n.number--average {\n  font-weight: bold;\n}\n\n.number--count {\n  color: var(--calcite-ui-text-2);\n  font-style: italic;\n}\n.number--count:not(:first-child) {\n  margin-inline-start: var(--calcite-rating-spacing-unit);\n}\n\n.visually-hidden {\n  position: absolute;\n  inline-size: 1px;\n  block-size: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n::slotted(input[slot=hidden-form-input]) {\n  margin: 0 !important;\n  opacity: 0 !important;\n  outline: none !important;\n  padding: 0 !important;\n  position: absolute !important;\n  inset: 0 !important;\n  transform: none !important;\n  -webkit-appearance: none !important;\n  z-index: -1 !important;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { h, Host } from \"@stencil/core\";\nimport { connectForm, disconnectForm, HiddenFormInputSlot } from \"../../utils/form\";\nimport { guid } from \"../../utils/guid\";\nimport { updateHostInteraction } from \"../../utils/interactive\";\nimport { connectLabel, disconnectLabel } from \"../../utils/label\";\nimport { componentLoaded, setComponentLoaded, setUpLoadableComponent } from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages } from \"../../utils/t9n\";\nimport { StarIcon } from \"./function/star\";\nexport class Rating {\n  constructor() {\n    this.handleRatingPointerOver = () => {\n      this.isKeyboardInteraction = false;\n    };\n    this.handleRatingPointerOut = () => {\n      this.isKeyboardInteraction = true;\n      this.hoverValue = null;\n      this.focusValue = null;\n      this.hasFocus = false;\n    };\n    this.handleRatingFocusIn = () => {\n      const selectedInput = this.value > 0 ? this.value - 1 : 0;\n      const focusInput = this.inputRefs[selectedInput];\n      const focusValue = Number(focusInput.value);\n      focusInput.select();\n      this.focusValue = focusValue;\n      this.hoverValue = focusValue;\n      this.hasFocus = true;\n    };\n    this.handleRatingFocusLeave = () => {\n      this.focusValue = null;\n      this.hoverValue = null;\n      this.hasFocus = false;\n    };\n    this.handleHostKeyDown = () => {\n      this.isKeyboardInteraction = true;\n    };\n    this.handleInputKeyDown = (event) => {\n      const target = event.currentTarget;\n      const inputVal = Number(target.value);\n      const key = event.key;\n      const numberKey = key == \" \" ? undefined : Number(key);\n      this.emit = true;\n      if (isNaN(numberKey)) {\n        switch (key) {\n          case \"Enter\":\n          case \" \":\n            this.value = !this.required && this.value === inputVal ? 0 : inputVal;\n            break;\n          case \"ArrowLeft\":\n            this.value = inputVal - 1;\n            break;\n          case \"ArrowRight\":\n            this.value = inputVal + 1;\n            break;\n          case \"Tab\":\n            if (this.hasFocus) {\n              this.hasFocus = false;\n              this.focusValue = null;\n              this.hoverValue = null;\n            }\n          default:\n            break;\n        }\n      }\n      else {\n        if (!this.required && numberKey >= 0 && numberKey <= this.max) {\n          this.value = numberKey;\n        }\n        else if (this.required && numberKey > 0 && numberKey <= this.max) {\n          this.value = numberKey;\n        }\n      }\n    };\n    this.handleInputChange = (event) => {\n      if (this.isKeyboardInteraction === true) {\n        const inputVal = Number(event.target[\"value\"]);\n        this.focusValue = inputVal;\n        this.hoverValue = inputVal;\n        this.value = inputVal;\n      }\n    };\n    this.handleLabelPointerOver = (event) => {\n      const target = event.currentTarget;\n      const newPointerValue = Number(target.firstChild[\"value\"] || 0);\n      this.hoverValue = newPointerValue;\n      this.focusValue = null;\n    };\n    this.handleLabelPointerDown = (event) => {\n      const target = event.currentTarget;\n      const inputVal = Number(target.firstChild[\"value\"] || 0);\n      this.focusValue = null;\n      this.hoverValue = null;\n      this.emit = true;\n      this.value = !this.required && this.value === inputVal ? 0 : inputVal;\n    };\n    this.emit = false;\n    this.guid = `calcite-ratings-${guid()}`;\n    this.isKeyboardInteraction = true;\n    this.max = 5;\n    this.average = undefined;\n    this.count = undefined;\n    this.disabled = false;\n    this.form = undefined;\n    this.messages = undefined;\n    this.messageOverrides = undefined;\n    this.name = undefined;\n    this.readOnly = false;\n    this.required = false;\n    this.scale = \"m\";\n    this.showChip = false;\n    this.value = 0;\n    this.effectiveLocale = \"\";\n    this.defaultMessages = undefined;\n    this.hoverValue = undefined;\n    this.focusValue = undefined;\n    this.hasFocus = undefined;\n  }\n  onMessagesChange() {\n    /* wired up by t9n util */\n  }\n  handleValueUpdate(newValue) {\n    this.hoverValue = newValue;\n    this.focusValue = newValue;\n    if (this.emit) {\n      this.calciteRatingChange.emit();\n    }\n    this.emit = false;\n  }\n  effectiveLocaleChange() {\n    updateMessages(this, this.effectiveLocale);\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  connectedCallback() {\n    connectLocalized(this);\n    connectMessages(this);\n    connectLabel(this);\n    connectForm(this);\n  }\n  async componentWillLoad() {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n    this.inputRefs = Array(this.max);\n  }\n  componentWillRender() {\n    this.starsMap = Array.from({ length: this.max }, (_, i) => {\n      const value = i + 1;\n      const average = !this.focusValue &&\n        !this.hoverValue &&\n        this.average &&\n        !this.value &&\n        value <= this.average;\n      const checked = value === this.value;\n      const focused = this.isKeyboardInteraction && this.hasFocus && this.focusValue === value;\n      const fraction = this.average && this.average + 1 - value;\n      const hovered = value <= this.hoverValue;\n      const id = `${this.guid}-${value}`;\n      const partial = !this.focusValue &&\n        !this.hoverValue &&\n        !this.value &&\n        !hovered &&\n        fraction > 0 &&\n        fraction < 1;\n      const selected = this.value >= value;\n      return {\n        average,\n        checked,\n        focused,\n        fraction,\n        hovered,\n        id,\n        idx: i,\n        partial,\n        selected,\n        value\n      };\n    });\n  }\n  componentDidLoad() {\n    setComponentLoaded(this);\n  }\n  disconnectedCallback() {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n  componentDidRender() {\n    updateHostInteraction(this);\n  }\n  render() {\n    return (h(Host, { onBlur: this.handleRatingFocusLeave, onFocus: this.handleRatingFocusIn, onKeyDown: this.handleHostKeyDown, onPointerOut: this.handleRatingPointerOut, onPointerOver: this.handleRatingPointerOver }, h(\"span\", { class: \"wrapper\" }, h(\"fieldset\", { class: \"fieldset\", disabled: this.disabled }, h(\"legend\", { class: \"visually-hidden\" }, this.messages.rating), this.starsMap.map(({ average, checked, focused, fraction, hovered, id, idx, partial, selected, value }) => {\n      return (h(\"label\", { class: {\n          star: true,\n          focused,\n          selected,\n          hovered,\n          average,\n          partial\n        }, htmlFor: id, onPointerDown: this.handleLabelPointerDown, onPointerOver: this.handleLabelPointerOver }, h(\"input\", { checked: checked, class: \"visually-hidden\", disabled: this.disabled || this.readOnly, id: id, name: this.guid, onChange: this.handleInputChange, onKeyDown: this.handleInputKeyDown, type: \"radio\", value: value,\n        // eslint-disable-next-line react/jsx-sort-props\n        ref: (el) => {\n          this.inputRefs[idx] = el;\n          return ((value === 1 || value === this.value) &&\n            (this.inputFocusRef = el));\n        } }), h(StarIcon, { full: selected || average, scale: this.scale }), partial && (h(\"div\", { class: \"fraction\", style: { width: `${fraction * 100}%` } }, h(StarIcon, { full: true, partial: true, scale: this.scale }))), h(\"span\", { class: \"visually-hidden\" }, this.messages.stars.replace(\"${num}\", `${value}`))));\n    }), (this.count || this.average) && this.showChip ? (h(\"calcite-chip\", { scale: this.scale, value: this.count?.toString() }, !!this.average && h(\"span\", { class: \"number--average\" }, this.average.toString()), !!this.count && h(\"span\", { class: \"number--count\" }, \"(\", this.count?.toString(), \")\"))) : null), h(HiddenFormInputSlot, { component: this }))));\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  onLabelClick() {\n    this.setFocus();\n  }\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n  /** Sets focus on the component. */\n  async setFocus() {\n    await componentLoaded(this);\n    this.inputFocusRef?.focus();\n  }\n  static get is() { return \"calcite-rating\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"rating.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"rating.css\"]\n    };\n  }\n  static get assetsDirs() { return [\"assets\"]; }\n  static get properties() {\n    return {\n      \"average\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies a cumulative average from previous ratings to display.\"\n        },\n        \"attribute\": \"average\",\n        \"reflect\": true\n      },\n      \"count\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the number of previous ratings to display.\"\n        },\n        \"attribute\": \"count\",\n        \"reflect\": true\n      },\n      \"disabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, interaction is prevented and the component is displayed with lower opacity.\"\n        },\n        \"attribute\": \"disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"form\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The ID of the form that will be associated with the component.\\n\\nWhen not set, the component will be associated with its ancestor `<form>` element, if any.\"\n        },\n        \"attribute\": \"form\",\n        \"reflect\": true\n      },\n      \"messages\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"RatingMessages\",\n          \"resolved\": \"{ rating: string; stars: string; }\",\n          \"references\": {\n            \"RatingMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/rating/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Made into a prop for testing purposes only\"\n        }\n      },\n      \"messageOverrides\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"Partial<RatingMessages>\",\n          \"resolved\": \"{ rating?: string; stars?: string; }\",\n          \"references\": {\n            \"Partial\": {\n              \"location\": \"global\"\n            },\n            \"RatingMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/rating/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Use this property to override individual strings used by the component.\"\n        }\n      },\n      \"name\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the name of the component.\\n\\nRequired to pass the component's `value` on form submission.\"\n        },\n        \"attribute\": \"name\",\n        \"reflect\": true\n      },\n      \"readOnly\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, the component's value can be read, but cannot be modified.\"\n        },\n        \"attribute\": \"read-only\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"required\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"When `true`, the component must have a value in order for the form to submit.\"\n        },\n        \"attribute\": \"required\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"showChip\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, and if available, displays the `average` and/or `count` data summary in a `calcite-chip`.\"\n        },\n        \"attribute\": \"show-chip\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"value\": {\n        \"type\": \"number\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The component's value.\"\n        },\n        \"attribute\": \"value\",\n        \"reflect\": true,\n        \"defaultValue\": \"0\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"effectiveLocale\": {},\n      \"defaultMessages\": {},\n      \"hoverValue\": {},\n      \"focusValue\": {},\n      \"hasFocus\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calciteRatingChange\",\n        \"name\": \"calciteRatingChange\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the component's value changes.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets focus on the component.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"messageOverrides\",\n        \"methodName\": \"onMessagesChange\"\n      }, {\n        \"propName\": \"value\",\n        \"methodName\": \"handleValueUpdate\"\n      }, {\n        \"propName\": \"effectiveLocale\",\n        \"methodName\": \"effectiveLocaleChange\"\n      }];\n  }\n}\n"]}