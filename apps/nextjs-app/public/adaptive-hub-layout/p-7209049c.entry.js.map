{"version":3,"sources":["../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/action-menu/action-menu.css?tag=calcite-action-menu&encapsulation=shadow","../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/action-menu/action-menu.js","../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/popover/resources.js","../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/popover/PopoverManager.js","../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/popover/popover.css?tag=calcite-popover&encapsulation=shadow","../../node_modules/.pnpm/@esri+calcite-components@1.2.0/node_modules/@esri/calcite-components/dist/collection/components/popover/popover.js"],"names":["actionMenuCss","SUPPORTED_MENU_NAV_KEYS","ActionMenu","[object Object]","hostRef","this","actionElements","guid","menuId","menuButtonId","connectMenuButtonEl","open","label","menuButtonEl","slottedMenuButtonEl","defaultMenuButtonEl","disconnectMenuButtonEl","setTooltipReferenceElement","active","setAttribute","toAriaBoolean","id","text","addEventListener","menuButtonClick","menuButtonKeyDown","removeEventListener","setMenuButtonEl","event","actions","target","assignedElements","flatten","filter","el","matches","setDefaultMenuButtonEl","handleCalciteActionClick","setFocus","isPrimaryPointerButton","toggleOpen","updateTooltip","tooltips","tooltipEl","expanded","referenceElement","updateAction","action","index","activeMenuItemIndex","tabIndex","updateActions","forEach","handleDefaultSlotChange","key","length","isActivationKey","preventDefault","click","handleActionNavigation","isValidKey","currentIndex","getRoundRobinIndex","Math","max","toggleOpenEnd","value","flipPlacements","undefined","overlayPositioning","placement","scale","setUpLoadableComponent","setComponentLoaded","calciteActionMenuOpen","emit","composedPath","includes","componentLoaded","focusElement","menuButtonSlot","h","name","SLOTS","trigger","onSlotchange","class","CSS","defaultTrigger","icon","ICONS","menu","textEnabled","ref","activeAction","activeDescendantId","focusTrapDisabled","offsetDistance","pointerDisabled","aria-activedescendant","aria-labelledby","onClick","role","Fragment","renderMenuButton","renderMenuItems","tooltip","supportedKeys","find","k","container","arrow","imageContainer","closeButtonContainer","closeButton","content","hasHeader","header","headerContent","heading","defaultPopoverPlacement","ARIA_CONTROLS","ARIA_EXPANDED","PopoverManager","registeredElements","Map","registeredElementCount","queryPopover","registeredElement","pathEl","has","get","togglePopovers","togglePopover","triggerDisabled","Array","from","values","popover","autoClose","keyHandler","defaultPrevented","closeAllPopovers","clickHandler","referenceEl","set","addListeners","delete","removeListeners","document","capture","popoverCss","manager","Popover","openTransitionProp","hasLoaded","setTransitionEl","transitionEl","connectOpenCloseComponent","focusTrapEl","connectFocusTrap","setFilteredPlacements","filteredFlipPlacements","filterComputedPlacements","setUpReferenceElement","warn","removeReferences","effectiveReferenceElement","getReferenceElement","connectFloatingUI","console","tagName","addReferences","getId","setExpandedAttr","registerElement","removeAttribute","unregisterElement","hide","storeArrowEl","arrowEl","reposition","closable","flipDisabled","headingLevel","messageOverrides","messages","defaultOffsetDistance","offsetSkidding","effectiveLocale","defaultMessages","deactivateFocusTrap","activateFocusTrap","updateAfterClose","updateMessages","connectLocalized","connectMessages","setUpMessages","disconnectLocalized","disconnectMessages","disconnectFloatingUI","disconnectOpenCloseComponent","delayed","floatingEl","includeArrow","type","forceUpdate","focusFirstTabbable","updateFocusTrapElements","queryElementRoots","calcitePopoverBeforeOpen","calcitePopoverOpen","calcitePopoverBeforeClose","calcitePopoverClose","close","closeButtonEl","headingNode","Heading","level","renderCloseButton","displayed","hidden","arrowNode","Host","aria-hidden","aria-label","aria-live","calcite-hydrated-hidden","FloatingCSS","animation","animationActive","renderHeader","assetsDirs"],"mappings":"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","sourcesContent":["/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n  --calcite-floating-ui-z-index: 600;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n:host {\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  background-color: var(--calcite-ui-foreground-1);\n  font-size: var(--calcite-font-size-1);\n  color: var(--calcite-ui-text-2);\n}\n\n.menu ::slotted(calcite-action) {\n  margin: 0.125rem;\n  display: flex;\n  outline-color: transparent;\n}\n\n.menu ::slotted(calcite-action[active]) {\n  outline: 2px solid var(--calcite-ui-brand);\n  outline-offset: 0px;\n}\n\n.default-trigger {\n  position: relative;\n  block-size: 100%;\n  flex: 0 1 auto;\n  align-self: stretch;\n}\n\nslot[name=trigger]::slotted(calcite-action),\ncalcite-action::slotted([slot=trigger]) {\n  position: relative;\n  block-size: 100%;\n  flex: 0 1 auto;\n  align-self: stretch;\n}\n\n.menu {\n  flex-direction: column;\n  flex-wrap: nowrap;\n  outline: 2px solid transparent;\n  outline-offset: 2px;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { h } from \"@stencil/core\";\nimport { Fragment } from \"@stencil/core/internal\";\nimport { getRoundRobinIndex } from \"../../utils/array\";\nimport { focusElement, isPrimaryPointerButton, toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { componentLoaded, setComponentLoaded, setUpLoadableComponent } from \"../../utils/loadable\";\nimport { CSS, ICONS, SLOTS } from \"./resources\";\nconst SUPPORTED_MENU_NAV_KEYS = [\"ArrowUp\", \"ArrowDown\", \"End\", \"Home\"];\n/**\n * @slot - A slot for adding `calcite-action`s.\n * @slot trigger - A slot for adding a `calcite-action` to trigger opening the menu.\n * @slot tooltip - A slot for adding an tooltip for the menu.\n */\nexport class ActionMenu {\n  constructor() {\n    this.actionElements = [];\n    this.guid = `calcite-action-menu-${guid()}`;\n    this.menuId = `${this.guid}-menu`;\n    this.menuButtonId = `${this.guid}-menu-button`;\n    // --------------------------------------------------------------------------\n    //\n    //  Component Methods\n    //\n    // --------------------------------------------------------------------------\n    this.connectMenuButtonEl = () => {\n      const { menuButtonId, menuId, open, label } = this;\n      const menuButtonEl = this.slottedMenuButtonEl || this.defaultMenuButtonEl;\n      if (this.menuButtonEl === menuButtonEl) {\n        return;\n      }\n      this.disconnectMenuButtonEl();\n      this.menuButtonEl = menuButtonEl;\n      this.setTooltipReferenceElement();\n      if (!menuButtonEl) {\n        return;\n      }\n      menuButtonEl.active = open;\n      menuButtonEl.setAttribute(\"aria-controls\", menuId);\n      menuButtonEl.setAttribute(\"aria-expanded\", toAriaBoolean(open));\n      menuButtonEl.setAttribute(\"aria-haspopup\", \"true\");\n      if (!menuButtonEl.id) {\n        menuButtonEl.id = menuButtonId;\n      }\n      if (!menuButtonEl.label) {\n        menuButtonEl.label = label;\n      }\n      if (!menuButtonEl.text) {\n        menuButtonEl.text = label;\n      }\n      menuButtonEl.addEventListener(\"pointerdown\", this.menuButtonClick);\n      menuButtonEl.addEventListener(\"keydown\", this.menuButtonKeyDown);\n    };\n    this.disconnectMenuButtonEl = () => {\n      const { menuButtonEl } = this;\n      if (!menuButtonEl) {\n        return;\n      }\n      menuButtonEl.removeEventListener(\"pointerdown\", this.menuButtonClick);\n      menuButtonEl.removeEventListener(\"keydown\", this.menuButtonKeyDown);\n    };\n    this.setMenuButtonEl = (event) => {\n      const actions = event.target\n        .assignedElements({\n        flatten: true\n      })\n        .filter((el) => el?.matches(\"calcite-action\"));\n      this.slottedMenuButtonEl = actions[0];\n      this.connectMenuButtonEl();\n    };\n    this.setDefaultMenuButtonEl = (el) => {\n      this.defaultMenuButtonEl = el;\n      this.connectMenuButtonEl();\n    };\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    // --------------------------------------------------------------------------\n    this.handleCalciteActionClick = () => {\n      this.open = false;\n      this.setFocus();\n    };\n    this.menuButtonClick = (event) => {\n      if (!isPrimaryPointerButton(event)) {\n        return;\n      }\n      this.toggleOpen();\n    };\n    this.updateTooltip = (event) => {\n      const tooltips = event.target\n        .assignedElements({\n        flatten: true\n      })\n        .filter((el) => el?.matches(\"calcite-tooltip\"));\n      this.tooltipEl = tooltips[0];\n      this.setTooltipReferenceElement();\n    };\n    this.setTooltipReferenceElement = () => {\n      const { tooltipEl, expanded, menuButtonEl, open } = this;\n      if (tooltipEl) {\n        tooltipEl.referenceElement = !expanded && !open ? menuButtonEl : null;\n      }\n    };\n    this.updateAction = (action, index) => {\n      const { guid, activeMenuItemIndex } = this;\n      const id = `${guid}-action-${index}`;\n      action.tabIndex = -1;\n      action.setAttribute(\"role\", \"menuitem\");\n      if (!action.id) {\n        action.id = id;\n      }\n      action.active = index === activeMenuItemIndex;\n    };\n    this.updateActions = (actions) => {\n      actions?.forEach(this.updateAction);\n    };\n    this.handleDefaultSlotChange = (event) => {\n      const actions = event.target\n        .assignedElements({\n        flatten: true\n      })\n        .filter((el) => el?.matches(\"calcite-action\"));\n      this.actionElements = actions;\n    };\n    this.menuButtonKeyDown = (event) => {\n      const { key } = event;\n      const { actionElements, activeMenuItemIndex, open } = this;\n      if (!actionElements.length) {\n        return;\n      }\n      if (isActivationKey(key)) {\n        event.preventDefault();\n        if (!open) {\n          this.toggleOpen();\n          return;\n        }\n        const action = actionElements[activeMenuItemIndex];\n        action ? action.click() : this.toggleOpen(false);\n      }\n      if (key === \"Tab\") {\n        this.open = false;\n        return;\n      }\n      if (key === \"Escape\") {\n        this.toggleOpen(false);\n        event.preventDefault();\n        return;\n      }\n      this.handleActionNavigation(event, key, actionElements);\n    };\n    this.handleActionNavigation = (event, key, actions) => {\n      if (!this.isValidKey(key, SUPPORTED_MENU_NAV_KEYS)) {\n        return;\n      }\n      event.preventDefault();\n      if (!this.open) {\n        this.toggleOpen();\n        if (key === \"Home\" || key === \"ArrowDown\") {\n          this.activeMenuItemIndex = 0;\n        }\n        if (key === \"End\" || key === \"ArrowUp\") {\n          this.activeMenuItemIndex = actions.length - 1;\n        }\n        return;\n      }\n      if (key === \"Home\") {\n        this.activeMenuItemIndex = 0;\n      }\n      if (key === \"End\") {\n        this.activeMenuItemIndex = actions.length - 1;\n      }\n      const currentIndex = this.activeMenuItemIndex;\n      if (key === \"ArrowUp\") {\n        this.activeMenuItemIndex = getRoundRobinIndex(Math.max(currentIndex - 1, -1), actions.length);\n      }\n      if (key === \"ArrowDown\") {\n        this.activeMenuItemIndex = getRoundRobinIndex(currentIndex + 1, actions.length);\n      }\n    };\n    this.toggleOpenEnd = () => {\n      this.setFocus();\n      this.el.removeEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n    };\n    this.toggleOpen = (value = !this.open) => {\n      this.el.addEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n      this.open = value;\n    };\n    this.expanded = false;\n    this.flipPlacements = undefined;\n    this.label = undefined;\n    this.open = false;\n    this.overlayPositioning = \"absolute\";\n    this.placement = \"auto\";\n    this.scale = undefined;\n    this.menuButtonEl = undefined;\n    this.activeMenuItemIndex = -1;\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  componentWillLoad() {\n    setUpLoadableComponent(this);\n  }\n  componentDidLoad() {\n    setComponentLoaded(this);\n  }\n  disconnectedCallback() {\n    this.disconnectMenuButtonEl();\n  }\n  expandedHandler() {\n    this.open = false;\n    this.setTooltipReferenceElement();\n  }\n  openHandler(open) {\n    this.activeMenuItemIndex = this.open ? 0 : -1;\n    if (this.menuButtonEl) {\n      this.menuButtonEl.active = open;\n    }\n    this.calciteActionMenuOpen.emit();\n    this.setTooltipReferenceElement();\n  }\n  closeCalciteActionMenuOnClick(event) {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n    const composedPath = event.composedPath();\n    if (composedPath.includes(this.el)) {\n      return;\n    }\n    this.open = false;\n  }\n  activeMenuItemIndexHandler() {\n    this.updateActions(this.actionElements);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n  /** Sets focus on the component. */\n  async setFocus() {\n    await componentLoaded(this);\n    focusElement(this.menuButtonEl);\n  }\n  renderMenuButton() {\n    const { label, scale, expanded } = this;\n    const menuButtonSlot = (h(\"slot\", { name: SLOTS.trigger, onSlotchange: this.setMenuButtonEl }, h(\"calcite-action\", { class: CSS.defaultTrigger, icon: ICONS.menu, scale: scale, text: label, textEnabled: expanded,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.setDefaultMenuButtonEl })));\n    return menuButtonSlot;\n  }\n  renderMenuItems() {\n    const { actionElements, activeMenuItemIndex, open, menuId, menuButtonEl, label, placement, overlayPositioning, flipPlacements } = this;\n    const activeAction = actionElements[activeMenuItemIndex];\n    const activeDescendantId = activeAction?.id || null;\n    return (h(\"calcite-popover\", { flipPlacements: flipPlacements, focusTrapDisabled: true, label: label, offsetDistance: 0, open: open, overlayPositioning: overlayPositioning, placement: placement, pointerDisabled: true, referenceElement: menuButtonEl }, h(\"div\", { \"aria-activedescendant\": activeDescendantId, \"aria-labelledby\": menuButtonEl?.id, class: CSS.menu, id: menuId, onClick: this.handleCalciteActionClick, role: \"menu\", tabIndex: -1 }, h(\"slot\", { onSlotchange: this.handleDefaultSlotChange }))));\n  }\n  render() {\n    return (h(Fragment, null, this.renderMenuButton(), this.renderMenuItems(), h(\"slot\", { name: SLOTS.tooltip, onSlotchange: this.updateTooltip })));\n  }\n  isValidKey(key, supportedKeys) {\n    return !!supportedKeys.find((k) => k === key);\n  }\n  static get is() { return \"calcite-action-menu\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"action-menu.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"action-menu.css\"]\n    };\n  }\n  static get properties() {\n    return {\n      \"expanded\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, the component is expanded.\"\n        },\n        \"attribute\": \"expanded\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"flipPlacements\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"EffectivePlacement[]\",\n          \"resolved\": \"Placement[]\",\n          \"references\": {\n            \"EffectivePlacement\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/floating-ui\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Defines the available placements that can be used when a flip occurs.\"\n        }\n      },\n      \"label\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": true,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the text string for the component.\"\n        },\n        \"attribute\": \"label\",\n        \"reflect\": false\n      },\n      \"open\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, the component is open.\"\n        },\n        \"attribute\": \"open\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"overlayPositioning\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"OverlayPositioning\",\n          \"resolved\": \"\\\"absolute\\\" | \\\"fixed\\\"\",\n          \"references\": {\n            \"OverlayPositioning\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/floating-ui\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Determines the type of positioning to use for the overlaid content.\\n\\nUsing `\\\"absolute\\\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\\n`\\\"fixed\\\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\\\"fixed\\\"`.\"\n        },\n        \"attribute\": \"overlay-positioning\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"absolute\\\"\"\n      },\n      \"placement\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"LogicalPlacement\",\n          \"resolved\": \"\\\"auto\\\" | \\\"top\\\" | \\\"right\\\" | \\\"bottom\\\" | \\\"left\\\" | \\\"top-start\\\" | \\\"top-end\\\" | \\\"right-start\\\" | \\\"right-end\\\" | \\\"bottom-start\\\" | \\\"bottom-end\\\" | \\\"left-start\\\" | \\\"left-end\\\" | \\\"auto-start\\\" | \\\"auto-end\\\" | \\\"leading-start\\\" | \\\"leading\\\" | \\\"leading-end\\\" | \\\"trailing-end\\\" | \\\"trailing\\\" | \\\"trailing-start\\\"\",\n          \"references\": {\n            \"LogicalPlacement\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/floating-ui\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Determines where the component will be positioned relative to the `referenceElement`.\"\n        },\n        \"attribute\": \"placement\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"auto\\\"\"\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component's trigger `calcite-action`.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"menuButtonEl\": {},\n      \"activeMenuItemIndex\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calciteActionMenuOpen\",\n        \"name\": \"calciteActionMenuOpen\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Emits when the `open` property is toggled.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets focus on the component.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"expanded\",\n        \"methodName\": \"expandedHandler\"\n      }, {\n        \"propName\": \"open\",\n        \"methodName\": \"openHandler\"\n      }, {\n        \"propName\": \"activeMenuItemIndex\",\n        \"methodName\": \"activeMenuItemIndexHandler\"\n      }];\n  }\n  static get listeners() {\n    return [{\n        \"name\": \"pointerdown\",\n        \"method\": \"closeCalciteActionMenuOnClick\",\n        \"target\": \"window\",\n        \"capture\": false,\n        \"passive\": true\n      }];\n  }\n}\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nexport const CSS = {\n  container: \"container\",\n  arrow: \"arrow\",\n  imageContainer: \"image-container\",\n  closeButtonContainer: \"close-button-container\",\n  closeButton: \"close-button\",\n  content: \"content\",\n  hasHeader: \"has-header\",\n  header: \"header\",\n  headerContent: \"header-content\",\n  heading: \"heading\"\n};\nexport const defaultPopoverPlacement = \"auto\";\nexport const ARIA_CONTROLS = \"aria-controls\";\nexport const ARIA_EXPANDED = \"aria-expanded\";\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { isPrimaryPointerButton } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nexport default class PopoverManager {\n  constructor() {\n    // --------------------------------------------------------------------------\n    //\n    //  Private Properties\n    //\n    // --------------------------------------------------------------------------\n    this.registeredElements = new Map();\n    this.registeredElementCount = 0;\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    // --------------------------------------------------------------------------\n    this.queryPopover = (composedPath) => {\n      const { registeredElements } = this;\n      const registeredElement = composedPath.find((pathEl) => registeredElements.has(pathEl));\n      return registeredElements.get(registeredElement);\n    };\n    this.togglePopovers = (event) => {\n      const composedPath = event.composedPath();\n      const togglePopover = this.queryPopover(composedPath);\n      if (togglePopover && !togglePopover.triggerDisabled) {\n        togglePopover.open = !togglePopover.open;\n      }\n      Array.from(this.registeredElements.values())\n        .filter((popover) => popover !== togglePopover && popover.autoClose && popover.open && !composedPath.includes(popover))\n        .forEach((popover) => (popover.open = false));\n    };\n    this.keyHandler = (event) => {\n      if (event.defaultPrevented) {\n        return;\n      }\n      if (event.key === \"Escape\") {\n        this.closeAllPopovers();\n      }\n      else if (isActivationKey(event.key)) {\n        this.togglePopovers(event);\n      }\n    };\n    this.clickHandler = (event) => {\n      if (isPrimaryPointerButton(event)) {\n        this.togglePopovers(event);\n      }\n    };\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n  registerElement(referenceEl, popover) {\n    this.registeredElementCount++;\n    this.registeredElements.set(referenceEl, popover);\n    if (this.registeredElementCount === 1) {\n      this.addListeners();\n    }\n  }\n  unregisterElement(referenceEl) {\n    if (this.registeredElements.delete(referenceEl)) {\n      this.registeredElementCount--;\n    }\n    if (this.registeredElementCount === 0) {\n      this.removeListeners();\n    }\n  }\n  closeAllPopovers() {\n    Array.from(this.registeredElements.values()).forEach((popover) => (popover.open = false));\n  }\n  addListeners() {\n    document.addEventListener(\"pointerdown\", this.clickHandler, { capture: true });\n    document.addEventListener(\"keydown\", this.keyHandler, { capture: true });\n  }\n  removeListeners() {\n    document.removeEventListener(\"pointerdown\", this.clickHandler, { capture: true });\n    document.removeEventListener(\"keydown\", this.keyHandler, { capture: true });\n  }\n}\n","/* mixins & extensions */\n@keyframes in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n@keyframes in-down {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, -5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-up {\n  0% {\n    opacity: 0;\n    transform: translate3D(0, 5px, 0);\n  }\n  100% {\n    opacity: 1;\n    transform: translate3D(0, 0, 0);\n  }\n}\n@keyframes in-scale {\n  0% {\n    opacity: 0;\n    transform: scale3D(0.95, 0.95, 1);\n  }\n  100% {\n    opacity: 1;\n    transform: scale3D(1, 1, 1);\n  }\n}\n:root {\n  --calcite-animation-timing: calc(150ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-duration-factor: var(--calcite-duration-factor, 1);\n  --calcite-internal-animation-timing-fast: calc(100ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-medium: calc(200ms * var(--calcite-internal-duration-factor));\n  --calcite-internal-animation-timing-slow: calc(300ms * var(--calcite-internal-duration-factor));\n}\n\n.calcite-animate {\n  opacity: 0;\n  animation-fill-mode: both;\n  animation-duration: var(--calcite-animation-timing);\n}\n\n.calcite-animate__in {\n  animation-name: in;\n}\n\n.calcite-animate__in-down {\n  animation-name: in-down;\n}\n\n.calcite-animate__in-up {\n  animation-name: in-up;\n}\n\n.calcite-animate__in-scale {\n  animation-name: in-scale;\n}\n\n@media (prefers-reduced-motion: reduce) {\n  :root {\n    --calcite-internal-duration-factor: 0.01;\n  }\n}\n/* helper to properly scale internal durations */\n/**\n* Currently only used in Checkbox.\n*/\n:root {\n  --calcite-floating-ui-transition: var(--calcite-animation-timing);\n  --calcite-floating-ui-z-index: 600;\n}\n\n:host([hidden]) {\n  display: none;\n}\n\n/**\n* CSS Custom Properties\n*\n* These properties can be overridden using the component's tag as selector.\n*\n* @prop --calcite-popover-z-index: Sets the z-index value for the component.\n*/\n:host {\n  --calcite-floating-ui-z-index: var(--calcite-popover-z-index, 900);\n  display: block;\n  position: absolute;\n  z-index: var(--calcite-floating-ui-z-index);\n}\n\n.calcite-floating-ui-anim {\n  position: relative;\n  transition: var(--calcite-floating-ui-transition);\n  transition-property: transform, visibility, opacity;\n  opacity: 0;\n  box-shadow: 0 0 16px 0 rgba(0, 0, 0, 0.16);\n  z-index: 1;\n  border-radius: 0.25rem;\n}\n\n:host([data-placement^=bottom]) .calcite-floating-ui-anim {\n  transform: translateY(-5px);\n}\n\n:host([data-placement^=top]) .calcite-floating-ui-anim {\n  transform: translateY(5px);\n}\n\n:host([data-placement^=left]) .calcite-floating-ui-anim {\n  transform: translateX(5px);\n}\n\n:host([data-placement^=right]) .calcite-floating-ui-anim {\n  transform: translateX(-5px);\n}\n\n:host([data-placement]) .calcite-floating-ui-anim--active {\n  opacity: 1;\n  transform: translate(0);\n}\n\n:host([calcite-hydrated-hidden]) {\n  visibility: hidden !important;\n  pointer-events: none;\n}\n\n.arrow,\n.arrow::before {\n  position: absolute;\n  inline-size: 8px;\n  block-size: 8px;\n  z-index: -1;\n}\n\n.arrow::before {\n  content: \"\";\n  --tw-shadow: 0 4px 8px -1px rgba(0, 0, 0, 0.08), 0 2px 4px -1px rgba(0, 0, 0, 0.04);\n  --tw-shadow-colored: 0 4px 8px -1px var(--tw-shadow-color), 0 2px 4px -1px var(--tw-shadow-color);\n  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);\n  transform: rotate(45deg);\n  background: var(--calcite-ui-foreground-1);\n}\n\n:host([data-placement^=top]) .arrow {\n  inset-block-end: -4px;\n}\n\n:host([data-placement^=bottom]) .arrow {\n  inset-block-start: -4px;\n}\n\n:host([data-placement^=right]) .arrow,\n:host([data-placement^=left]) .arrow {\n  direction: ltr;\n  text-align: start;\n}\n\n:host([data-placement^=left]) .arrow {\n  inset-inline-end: -4px;\n}\n\n:host([data-placement^=right]) .arrow {\n  inset-inline-start: -4px;\n}\n\n:host([scale=s]) .heading {\n  padding-inline: 0.75rem;\n  padding-block: 0.5rem;\n  font-size: var(--calcite-font-size--1);\n  line-height: 1.375;\n}\n\n:host([scale=m]) .heading {\n  padding-inline: 1rem;\n  padding-block: 0.75rem;\n  font-size: var(--calcite-font-size-0);\n  line-height: 1.375;\n}\n\n:host([scale=l]) .heading {\n  padding-inline: 1.25rem;\n  padding-block: 1rem;\n  font-size: var(--calcite-font-size-1);\n  line-height: 1.375;\n}\n\n:host {\n  pointer-events: none;\n}\n\n:host([open]) {\n  pointer-events: initial;\n}\n\n.calcite-floating-ui-anim {\n  border-radius: 0.25rem;\n  border-width: 1px;\n  border-style: solid;\n  border-color: var(--calcite-ui-border-3);\n  background-color: var(--calcite-ui-foreground-1);\n}\n\n.arrow::before {\n  outline: 1px solid var(--calcite-ui-border-3);\n}\n\n.header {\n  display: flex;\n  flex: 1 1 auto;\n  align-items: stretch;\n  justify-content: flex-start;\n  border-width: 0px;\n  border-block-end-width: 1px;\n  border-style: solid;\n  background-color: var(--calcite-ui-foreground-1);\n  border-block-end-color: var(--calcite-ui-border-3);\n}\n\n.heading {\n  margin: 0px;\n  display: block;\n  flex: 1 1 auto;\n  align-self: center;\n  white-space: normal;\n  font-weight: var(--calcite-font-weight-medium);\n  color: var(--calcite-ui-text-1);\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\n.container {\n  position: relative;\n  display: flex;\n  block-size: 100%;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  border-radius: 0.25rem;\n  background-color: var(--calcite-ui-foreground-1);\n  color: var(--calcite-ui-text-1);\n}\n.container.has-header {\n  flex-direction: column;\n}\n\n.content {\n  display: flex;\n  block-size: 100%;\n  inline-size: 100%;\n  flex-direction: column;\n  flex-wrap: nowrap;\n  align-self: center;\n  word-wrap: break-word;\n  word-break: break-word;\n}\n\n.close-button-container {\n  display: flex;\n  overflow: hidden;\n  flex: 0 0 auto;\n  border-start-end-radius: 0.25rem;\n  border-end-end-radius: 0.25rem;\n}\n\n::slotted(calcite-panel),\n::slotted(calcite-flow) {\n  block-size: 100%;\n}","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { forceUpdate, h, Host } from \"@stencil/core\";\nimport { connectFloatingUI, defaultOffsetDistance, disconnectFloatingUI, filterComputedPlacements, FloatingCSS, reposition, updateAfterClose } from \"../../utils/floating-ui\";\nimport { activateFocusTrap, connectFocusTrap, deactivateFocusTrap, updateFocusTrapElements } from \"../../utils/focusTrapComponent\";\nimport { ARIA_CONTROLS, ARIA_EXPANDED, CSS, defaultPopoverPlacement } from \"./resources\";\nimport { focusFirstTabbable, queryElementRoots, toAriaBoolean } from \"../../utils/dom\";\nimport { guid } from \"../../utils/guid\";\nimport { connectOpenCloseComponent, disconnectOpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { Heading } from \"../functional/Heading\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport { connectMessages, disconnectMessages, setUpMessages, updateMessages } from \"../../utils/t9n\";\nimport PopoverManager from \"./PopoverManager\";\nimport { componentLoaded, setComponentLoaded, setUpLoadableComponent } from \"../../utils/loadable\";\nconst manager = new PopoverManager();\n/**\n * @slot - A slot for adding custom content.\n */\nexport class Popover {\n  constructor() {\n    this.guid = `calcite-popover-${guid()}`;\n    this.openTransitionProp = \"opacity\";\n    this.hasLoaded = false;\n    // --------------------------------------------------------------------------\n    //\n    //  Private Methods\n    //\n    // --------------------------------------------------------------------------\n    this.setTransitionEl = (el) => {\n      this.transitionEl = el;\n      connectOpenCloseComponent(this);\n      this.focusTrapEl = el;\n      connectFocusTrap(this);\n    };\n    this.setFilteredPlacements = () => {\n      const { el, flipPlacements } = this;\n      this.filteredFlipPlacements = flipPlacements\n        ? filterComputedPlacements(flipPlacements, el)\n        : null;\n    };\n    this.setUpReferenceElement = (warn = true) => {\n      this.removeReferences();\n      this.effectiveReferenceElement = this.getReferenceElement();\n      connectFloatingUI(this, this.effectiveReferenceElement, this.el);\n      const { el, referenceElement, effectiveReferenceElement } = this;\n      if (warn && referenceElement && !effectiveReferenceElement) {\n        console.warn(`${el.tagName}: reference-element id \"${referenceElement}\" was not found.`, {\n          el\n        });\n      }\n      this.addReferences();\n    };\n    this.getId = () => {\n      return this.el.id || this.guid;\n    };\n    this.setExpandedAttr = () => {\n      const { effectiveReferenceElement, open } = this;\n      if (!effectiveReferenceElement) {\n        return;\n      }\n      if (\"setAttribute\" in effectiveReferenceElement) {\n        effectiveReferenceElement.setAttribute(ARIA_EXPANDED, toAriaBoolean(open));\n      }\n    };\n    this.addReferences = () => {\n      const { effectiveReferenceElement } = this;\n      if (!effectiveReferenceElement) {\n        return;\n      }\n      const id = this.getId();\n      if (\"setAttribute\" in effectiveReferenceElement) {\n        effectiveReferenceElement.setAttribute(ARIA_CONTROLS, id);\n      }\n      manager.registerElement(effectiveReferenceElement, this.el);\n      this.setExpandedAttr();\n    };\n    this.removeReferences = () => {\n      const { effectiveReferenceElement } = this;\n      if (!effectiveReferenceElement) {\n        return;\n      }\n      if (\"removeAttribute\" in effectiveReferenceElement) {\n        effectiveReferenceElement.removeAttribute(ARIA_CONTROLS);\n        effectiveReferenceElement.removeAttribute(ARIA_EXPANDED);\n      }\n      manager.unregisterElement(effectiveReferenceElement);\n    };\n    this.hide = () => {\n      this.open = false;\n    };\n    this.storeArrowEl = (el) => {\n      this.arrowEl = el;\n      this.reposition(true);\n    };\n    this.autoClose = false;\n    this.closable = false;\n    this.flipDisabled = false;\n    this.focusTrapDisabled = false;\n    this.pointerDisabled = false;\n    this.flipPlacements = undefined;\n    this.heading = undefined;\n    this.headingLevel = undefined;\n    this.label = undefined;\n    this.messageOverrides = undefined;\n    this.messages = undefined;\n    this.offsetDistance = defaultOffsetDistance;\n    this.offsetSkidding = 0;\n    this.open = false;\n    this.overlayPositioning = \"absolute\";\n    this.placement = defaultPopoverPlacement;\n    this.referenceElement = undefined;\n    this.scale = \"m\";\n    this.triggerDisabled = false;\n    this.effectiveLocale = \"\";\n    this.effectiveReferenceElement = undefined;\n    this.defaultMessages = undefined;\n  }\n  handlefocusTrapDisabled(focusTrapDisabled) {\n    if (!this.open) {\n      return;\n    }\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n  flipPlacementsHandler() {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n  onMessagesChange() {\n    /* wired up by t9n util */\n  }\n  offsetDistanceOffsetHandler() {\n    this.reposition(true);\n  }\n  offsetSkiddingHandler() {\n    this.reposition(true);\n  }\n  openHandler(value) {\n    if (value) {\n      this.reposition(true);\n    }\n    else {\n      updateAfterClose(this.el);\n    }\n    this.setExpandedAttr();\n  }\n  overlayPositioningHandler() {\n    this.reposition(true);\n  }\n  placementHandler() {\n    this.reposition(true);\n  }\n  referenceElementHandler() {\n    this.setUpReferenceElement();\n    this.reposition(true);\n  }\n  effectiveLocaleChange() {\n    updateMessages(this, this.effectiveLocale);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  connectedCallback() {\n    this.setFilteredPlacements();\n    connectLocalized(this);\n    connectMessages(this);\n    connectOpenCloseComponent(this);\n    this.setUpReferenceElement(this.hasLoaded);\n  }\n  async componentWillLoad() {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n  }\n  componentDidLoad() {\n    setComponentLoaded(this);\n    if (this.referenceElement && !this.effectiveReferenceElement) {\n      this.setUpReferenceElement();\n    }\n    this.reposition();\n    this.hasLoaded = true;\n  }\n  disconnectedCallback() {\n    this.removeReferences();\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectFloatingUI(this, this.effectiveReferenceElement, this.el);\n    disconnectOpenCloseComponent(this);\n    deactivateFocusTrap(this);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed\n   */\n  async reposition(delayed = false) {\n    const { el, effectiveReferenceElement, placement, overlayPositioning, flipDisabled, filteredFlipPlacements, offsetDistance, offsetSkidding, arrowEl } = this;\n    return reposition(this, {\n      floatingEl: el,\n      referenceEl: effectiveReferenceElement,\n      overlayPositioning,\n      placement,\n      flipDisabled,\n      flipPlacements: filteredFlipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      includeArrow: !this.pointerDisabled,\n      arrowEl,\n      type: \"popover\"\n    }, delayed);\n  }\n  /**\n   * Sets focus on the component's first focusable element.\n   */\n  async setFocus() {\n    await componentLoaded(this);\n    forceUpdate(this.el);\n    focusFirstTabbable(this.focusTrapEl);\n  }\n  /**\n   * Updates the element(s) that are used within the focus-trap of the component.\n   */\n  async updateFocusTrapElements() {\n    updateFocusTrapElements(this);\n  }\n  getReferenceElement() {\n    const { referenceElement, el } = this;\n    return ((typeof referenceElement === \"string\"\n      ? queryElementRoots(el, { id: referenceElement })\n      : referenceElement) || null);\n  }\n  onBeforeOpen() {\n    this.calcitePopoverBeforeOpen.emit();\n  }\n  onOpen() {\n    this.calcitePopoverOpen.emit();\n    activateFocusTrap(this);\n  }\n  onBeforeClose() {\n    this.calcitePopoverBeforeClose.emit();\n  }\n  onClose() {\n    this.calcitePopoverClose.emit();\n    deactivateFocusTrap(this);\n  }\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n  renderCloseButton() {\n    const { messages, closable } = this;\n    return closable ? (h(\"div\", { class: CSS.closeButtonContainer, key: CSS.closeButtonContainer }, h(\"calcite-action\", { class: CSS.closeButton, onClick: this.hide, scale: this.scale, text: messages.close,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: (closeButtonEl) => (this.closeButtonEl = closeButtonEl) }, h(\"calcite-icon\", { icon: \"x\", scale: this.scale === \"l\" ? \"m\" : this.scale })))) : null;\n  }\n  renderHeader() {\n    const { heading, headingLevel } = this;\n    const headingNode = heading ? (h(Heading, { class: CSS.heading, level: headingLevel }, heading)) : null;\n    return headingNode ? (h(\"div\", { class: CSS.header, key: CSS.header }, headingNode, this.renderCloseButton())) : null;\n  }\n  render() {\n    const { effectiveReferenceElement, heading, label, open, pointerDisabled } = this;\n    const displayed = effectiveReferenceElement && open;\n    const hidden = !displayed;\n    const arrowNode = !pointerDisabled ? (h(\"div\", { class: CSS.arrow,\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.storeArrowEl })) : null;\n    return (h(Host, { \"aria-hidden\": toAriaBoolean(hidden), \"aria-label\": label, \"aria-live\": \"polite\", \"calcite-hydrated-hidden\": hidden, id: this.getId(), role: \"dialog\" }, h(\"div\", { class: {\n        [FloatingCSS.animation]: true,\n        [FloatingCSS.animationActive]: displayed\n      },\n      // eslint-disable-next-line react/jsx-sort-props\n      ref: this.setTransitionEl }, arrowNode, h(\"div\", { class: {\n        [CSS.hasHeader]: !!heading,\n        [CSS.container]: true\n      } }, this.renderHeader(), h(\"div\", { class: CSS.content }, h(\"slot\", null)), !heading ? this.renderCloseButton() : null))));\n  }\n  static get is() { return \"calcite-popover\"; }\n  static get encapsulation() { return \"shadow\"; }\n  static get originalStyleUrls() {\n    return {\n      \"$\": [\"popover.scss\"]\n    };\n  }\n  static get styleUrls() {\n    return {\n      \"$\": [\"popover.css\"]\n    };\n  }\n  static get assetsDirs() { return [\"assets\"]; }\n  static get properties() {\n    return {\n      \"autoClose\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, clicking outside of the component automatically closes open `calcite-popover`s.\"\n        },\n        \"attribute\": \"auto-close\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"closable\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, display a close button within the component.\"\n        },\n        \"attribute\": \"closable\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"flipDisabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, prevents flipping the component's placement when overlapping its `referenceElement`.\"\n        },\n        \"attribute\": \"flip-disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"focusTrapDisabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, prevents focus trapping.\"\n        },\n        \"attribute\": \"focus-trap-disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"pointerDisabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, removes the caret pointer.\"\n        },\n        \"attribute\": \"pointer-disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"flipPlacements\": {\n        \"type\": \"unknown\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"EffectivePlacement[]\",\n          \"resolved\": \"Placement[]\",\n          \"references\": {\n            \"EffectivePlacement\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/floating-ui\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Defines the available placements that can be used when a flip occurs.\"\n        }\n      },\n      \"heading\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The component header text.\"\n        },\n        \"attribute\": \"heading\",\n        \"reflect\": false\n      },\n      \"headingLevel\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"HeadingLevel\",\n          \"resolved\": \"1 | 2 | 3 | 4 | 5 | 6\",\n          \"references\": {\n            \"HeadingLevel\": {\n              \"location\": \"import\",\n              \"path\": \"../functional/Heading\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the number at which section headings should start.\"\n        },\n        \"attribute\": \"heading-level\",\n        \"reflect\": true\n      },\n      \"label\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"string\",\n          \"resolved\": \"string\",\n          \"references\": {}\n        },\n        \"required\": true,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Accessible name for the component.\"\n        },\n        \"attribute\": \"label\",\n        \"reflect\": false\n      },\n      \"messageOverrides\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"Partial<PopoverMessages>\",\n          \"resolved\": \"{ close?: string; }\",\n          \"references\": {\n            \"Partial\": {\n              \"location\": \"global\"\n            },\n            \"PopoverMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/popover/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Use this property to override individual strings used by the component.\"\n        }\n      },\n      \"messages\": {\n        \"type\": \"unknown\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"PopoverMessages\",\n          \"resolved\": \"{ close: string; }\",\n          \"references\": {\n            \"PopoverMessages\": {\n              \"location\": \"import\",\n              \"path\": \"./assets/popover/t9n\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"internal\",\n              \"text\": undefined\n            }],\n          \"text\": \"Made into a prop for testing purposes only\"\n        }\n      },\n      \"offsetDistance\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [{\n              \"name\": \"default\",\n              \"text\": \"6\"\n            }],\n          \"text\": \"Offsets the position of the popover away from the `referenceElement`.\"\n        },\n        \"attribute\": \"offset-distance\",\n        \"reflect\": true,\n        \"defaultValue\": \"defaultOffsetDistance\"\n      },\n      \"offsetSkidding\": {\n        \"type\": \"number\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"number\",\n          \"resolved\": \"number\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Offsets the position of the component along the `referenceElement`.\"\n        },\n        \"attribute\": \"offset-skidding\",\n        \"reflect\": true,\n        \"defaultValue\": \"0\"\n      },\n      \"open\": {\n        \"type\": \"boolean\",\n        \"mutable\": true,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, displays and positions the component.\"\n        },\n        \"attribute\": \"open\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      },\n      \"overlayPositioning\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"OverlayPositioning\",\n          \"resolved\": \"\\\"absolute\\\" | \\\"fixed\\\"\",\n          \"references\": {\n            \"OverlayPositioning\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/floating-ui\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Determines the type of positioning to use for the overlaid content.\\n\\nUsing `\\\"absolute\\\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\\n\\n`\\\"fixed\\\"` value should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\\\"fixed\\\"`.\"\n        },\n        \"attribute\": \"overlay-positioning\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"absolute\\\"\"\n      },\n      \"placement\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"LogicalPlacement\",\n          \"resolved\": \"\\\"auto\\\" | \\\"top\\\" | \\\"right\\\" | \\\"bottom\\\" | \\\"left\\\" | \\\"top-start\\\" | \\\"top-end\\\" | \\\"right-start\\\" | \\\"right-end\\\" | \\\"bottom-start\\\" | \\\"bottom-end\\\" | \\\"left-start\\\" | \\\"left-end\\\" | \\\"auto-start\\\" | \\\"auto-end\\\" | \\\"leading-start\\\" | \\\"leading\\\" | \\\"leading-end\\\" | \\\"trailing-end\\\" | \\\"trailing\\\" | \\\"trailing-start\\\"\",\n          \"references\": {\n            \"LogicalPlacement\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/floating-ui\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Determines where the component will be positioned relative to the `referenceElement`.\"\n        },\n        \"attribute\": \"placement\",\n        \"reflect\": true,\n        \"defaultValue\": \"defaultPopoverPlacement\"\n      },\n      \"referenceElement\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"ReferenceElement | string\",\n          \"resolved\": \"Element | VirtualElement | string\",\n          \"references\": {\n            \"ReferenceElement\": {\n              \"location\": \"import\",\n              \"path\": \"../../utils/floating-ui\"\n            }\n          }\n        },\n        \"required\": true,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"The `referenceElement` used to position the component according to its `placement` value. Setting to an `HTMLElement` is preferred so the component does not need to query the DOM. However, a string `id` of the reference element can also be used.\"\n        },\n        \"attribute\": \"reference-element\",\n        \"reflect\": false\n      },\n      \"scale\": {\n        \"type\": \"string\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"Scale\",\n          \"resolved\": \"\\\"l\\\" | \\\"m\\\" | \\\"s\\\"\",\n          \"references\": {\n            \"Scale\": {\n              \"location\": \"import\",\n              \"path\": \"../interfaces\"\n            }\n          }\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Specifies the size of the component.\"\n        },\n        \"attribute\": \"scale\",\n        \"reflect\": true,\n        \"defaultValue\": \"\\\"m\\\"\"\n      },\n      \"triggerDisabled\": {\n        \"type\": \"boolean\",\n        \"mutable\": false,\n        \"complexType\": {\n          \"original\": \"boolean\",\n          \"resolved\": \"boolean\",\n          \"references\": {}\n        },\n        \"required\": false,\n        \"optional\": false,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"When `true`, disables automatically toggling the component when its `referenceElement` has been triggered.\\n\\nThis property can be set to `true` to manage when the component is open.\"\n        },\n        \"attribute\": \"trigger-disabled\",\n        \"reflect\": true,\n        \"defaultValue\": \"false\"\n      }\n    };\n  }\n  static get states() {\n    return {\n      \"effectiveLocale\": {},\n      \"effectiveReferenceElement\": {},\n      \"defaultMessages\": {}\n    };\n  }\n  static get events() {\n    return [{\n        \"method\": \"calcitePopoverBeforeClose\",\n        \"name\": \"calcitePopoverBeforeClose\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the component is requested to be closed and before the closing transition begins.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calcitePopoverClose\",\n        \"name\": \"calcitePopoverClose\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the component is closed and animation is complete.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calcitePopoverBeforeOpen\",\n        \"name\": \"calcitePopoverBeforeOpen\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the component is added to the DOM but not rendered, and before the opening transition begins.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }, {\n        \"method\": \"calcitePopoverOpen\",\n        \"name\": \"calcitePopoverOpen\",\n        \"bubbles\": true,\n        \"cancelable\": false,\n        \"composed\": true,\n        \"docs\": {\n          \"tags\": [],\n          \"text\": \"Fires when the component is open and animation is complete.\"\n        },\n        \"complexType\": {\n          \"original\": \"void\",\n          \"resolved\": \"void\",\n          \"references\": {}\n        }\n      }];\n  }\n  static get methods() {\n    return {\n      \"reposition\": {\n        \"complexType\": {\n          \"signature\": \"(delayed?: boolean) => Promise<void>\",\n          \"parameters\": [{\n              \"tags\": [{\n                  \"name\": \"param\",\n                  \"text\": \"delayed\"\n                }],\n              \"text\": \"\"\n            }],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Updates the position of the component.\",\n          \"tags\": [{\n              \"name\": \"param\",\n              \"text\": \"delayed\"\n            }]\n        }\n      },\n      \"setFocus\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Sets focus on the component's first focusable element.\",\n          \"tags\": []\n        }\n      },\n      \"updateFocusTrapElements\": {\n        \"complexType\": {\n          \"signature\": \"() => Promise<void>\",\n          \"parameters\": [],\n          \"references\": {\n            \"Promise\": {\n              \"location\": \"global\"\n            }\n          },\n          \"return\": \"Promise<void>\"\n        },\n        \"docs\": {\n          \"text\": \"Updates the element(s) that are used within the focus-trap of the component.\",\n          \"tags\": []\n        }\n      }\n    };\n  }\n  static get elementRef() { return \"el\"; }\n  static get watchers() {\n    return [{\n        \"propName\": \"focusTrapDisabled\",\n        \"methodName\": \"handlefocusTrapDisabled\"\n      }, {\n        \"propName\": \"flipPlacements\",\n        \"methodName\": \"flipPlacementsHandler\"\n      }, {\n        \"propName\": \"messageOverrides\",\n        \"methodName\": \"onMessagesChange\"\n      }, {\n        \"propName\": \"offsetDistance\",\n        \"methodName\": \"offsetDistanceOffsetHandler\"\n      }, {\n        \"propName\": \"offsetSkidding\",\n        \"methodName\": \"offsetSkiddingHandler\"\n      }, {\n        \"propName\": \"open\",\n        \"methodName\": \"openHandler\"\n      }, {\n        \"propName\": \"overlayPositioning\",\n        \"methodName\": \"overlayPositioningHandler\"\n      }, {\n        \"propName\": \"placement\",\n        \"methodName\": \"placementHandler\"\n      }, {\n        \"propName\": \"referenceElement\",\n        \"methodName\": \"referenceElementHandler\"\n      }, {\n        \"propName\": \"effectiveLocale\",\n        \"methodName\": \"effectiveLocaleChange\"\n      }];\n  }\n}\n"]}