{"version":3,"file":"hub-layout-card.js","sourceRoot":"","sources":["../../../src/components/hub-layout-card/hub-layout-card.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,KAAK,aAAa,MAAM,eAAe,CAAC;AAC/C,OAAO,0BAA0B,CAAA;AASjC,MAAM,OAAO,aAAa;EAIxB,gBAAgB;IACd,MAAM,YAAY,GAAG,IAAI,aAAa,CAAC,YAAY,EAAE,CAAC;IACtD,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAChC,MAAM,YAAY,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC;IAC3C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;EAC7C,CAAC;EAED,MAAM;IACJ,IAAI,OAAO,CAAC;IACZ,QAAQ,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;MACxB,KAAK,WAAW;QACd,OAAO,GAAG,mBAAa,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,IAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAe,CAAC;QAClF,MAAM;MACR,KAAK,OAAO;QACV,OAAO,GAAG,CACR;UACE,WAAK,IAAI,EAAC,WAAW,EAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,GAAI,CAClF,CAChB,CAAC;QACF,MAAM;MACR,KAAK,KAAK;QACR,OAAO,GAAG,CACR,mBACE,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EACpB,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,EACpB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,EACtB,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,GACX,CAChB,CAAC;QACF,MAAM;MACR,2EAA2E;KAC5E;IAED,OAAO,WAAK,KAAK,EAAC,MAAM,EAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK;MAAG,OAAO;MAEzD,oBAAc,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,IAClC,IAAI,CAAC,MAAM,CAAC,IAAI,CACJ,CACX,CAAC;EACT,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Prop, h } from '@stencil/core';\nimport * as AdaptiveCards from 'adaptivecards';\nimport '@esri/calcite-components'\n\n\n\n@Component({\n  tag: 'hub-layout-card',\n  styleUrl: 'hub-layout-card.css',\n  shadow: true,\n})\nexport class CardComponent {\n  @Prop() config: any;\n  cardElement: HTMLElement;\n\n  componentDidLoad() {\n    const adaptiveCard = new AdaptiveCards.AdaptiveCard();\n    adaptiveCard.parse(this.config);\n    const renderedCard = adaptiveCard.render();\n    this.cardElement.appendChild(renderedCard);\n  }\n\n  render() {\n    let content;\n    switch (this.config.type) {\n      case 'TextBlock':\n        content = <calcite-tip style={this.config.style}>{this.config.text}</calcite-tip>;\n        break;\n      case 'Image':\n        content = (\n          <calcite-card>\n            <img slot=\"thumbnail\" src={this.config.url} style={this.config.style} alt={this.config.text} />\n          </calcite-card>\n        );\n        break;\n      case 'Map':\n        content = (\n          <calcite-map\n            lat={this.config.lat}\n            lon={this.config.lon}\n            zoom={this.config.zoom}\n            style={this.config.style}\n          ></calcite-map>\n        );\n        break;\n      // Add more case statements for other card types like weather, survey, etc.\n    }\n\n    return <div class=\"card\" style={this.config.style}>{content}\n\n      <calcite-chip value={this.config.type}>\n        {this.config.type}\n      </calcite-chip>\n    </div>;\n  }\n}\n"]}