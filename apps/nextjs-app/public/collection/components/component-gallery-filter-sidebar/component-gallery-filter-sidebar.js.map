{"version":3,"file":"component-gallery-filter-sidebar.js","sourceRoot":"","sources":["../../../src/components/component-gallery-filter-sidebar/component-gallery-filter-sidebar.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAgB,MAAM,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAQhF,MAAM,OAAO,6BAA6B;;IAK9B,cAAS,GAAyC,EAAE,CAAC;mBAJZ,EAAE;;EAOnD,eAAe,CAAC,MAAM;IACpB,MAAM,OAAO,GAAG;MACd,IAAI,EAAE,EAAE;MACR,MAAM,EAAE,EAAE;KACX,CAAC;IAEF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAE;MAC3C,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC;SAC1D,MAAM,CAAC,CAAC,IAA+B,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC;SAC1D,GAAG,CAAC,CAAC,IAA+B,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;IAE7D,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;EACtC,CAAC;EAID,MAAM;IACJ,OAAO,CACL,WAAK,KAAK,EAAC,SAAS,IACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;MACxC,OAAO,CACL,WAAK,KAAK,EAAC,QAAQ;QACjB,YAAM,KAAK,EAAC,aAAa;;UAAY,MAAM,CAAQ;QACnD,oBAAc,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,oBAAiB,UAAU,IAC9E,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;UAC1C,OAAO,6BAAoB,MAAM,CAAqB,CAAA;QACxD,CAAC,CAAC,CACW,CACX,CACP,CAAA;IACH,CAAC,CAAC,CACE,CACP,CAAC;EACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, h, Event, EventEmitter, Listen, Prop } from '@stencil/core';\nimport { SearchFilters } from '../../utils/search';\n\n@Component({\n  tag: 'component-gallery-filter-sidebar',\n  styleUrl: 'component-gallery-filter-sidebar.css',\n  shadow: true,\n})\nexport class ComponentGalleryFilterSidebar {\n    @Prop() filters: Record<string, Array<string>> = {};\n\n    @Event() filtersUpdated: EventEmitter<SearchFilters>;\n    \n    private filtersEl:Record<string,HTMLCalciteTreeElement> = {};\n\n    @Listen('calciteTreeSelect')\n    onFilterChanged(_event) {\n      const filters = {\n        type: [],\n        status: []\n      };\n      \n      Object.keys(this.filters).forEach((filter) => {\n        filters[filter] = Array.from(this.filtersEl[filter].children)\n          .filter((node:HTMLCalciteTreeItemElement) => node.selected)\n          .map((node:HTMLCalciteTreeItemElement) => node.innerText)\n\n      })\n\n      this.filtersUpdated.emit( filters );\n    }\n  \n\n  \n    render() {\n      return (\n        <div class=\"sidebar\">\n          {Object.keys(this.filters).map((filter) => {\n            return (\n              <div class=\"filter\">\n                <span class=\"filterTitle\">Filter by {filter}</span>\n                <calcite-tree ref={(el) => this.filtersEl[filter] = el} selection-mode=\"multiple\">\n                  {this.filters[filter].sort().map((option) => {\n                    return <calcite-tree-item>{option}</calcite-tree-item>\n                  })}\n                </calcite-tree>\n              </div>\n            )\n          })}\n        </div>\n      );\n    }\n  }\n  "]}