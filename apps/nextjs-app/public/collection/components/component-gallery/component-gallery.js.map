{"version":3,"file":"component-gallery.js","sourceRoot":"","sources":["../../../src/components/component-gallery/component-gallery.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Prop, State, Watch } from '@stencil/core';\nimport axios from 'axios';\nimport { createSearchIndex, search, addRecord, SearchFilters, getFilters } from '../../utils/search';\n\n@Component({\n  tag: 'component-gallery',\n  styleUrl: 'component-gallery.css',\n  shadow: true,\n})\nexport class ComponentGallery {\n  /** \n   * Set the type & status filters on the gallery.\n   * Each filter type is `and` (both), while the array are `or` (any of)\n   * Example: filters={ type: ['Discussions', 'Telemetry], status: ['Production']}\n   */\n  @Prop({ mutable: true, reflect: true}) filters: Record<string, Array<string>> = {};\n  /**\n   * Set the query string to search the title\n   */\n  @Prop({ mutable: true, reflect: true}) query: string = '';\n\n  @State() components: any[] = [];\n  @State() filteredComponents: any[] = [];\n  @State() filterOptions: Record<string, Array<string>> = {};\n\n  searchIndex = createSearchIndex();\n\n  async componentWillLoad() {\n    try {\n      \n      this.components = await this.loadConfig();\n      this.filteredComponents = this.components;\n      this.filterOptions = getFilters();\n\n      // Do a search in case query/filter props were set\n      // This will keep all components if no properties were set.\n      this.handleSearch();\n\n    } catch (error) {\n      console.error('<component-gallery>: Error fetching configuration!', error);\n    }\n  }\n\n  /**\n   * Load the data/components.json configuration file\n   */\n  private async loadConfig() {\n    const response = await axios.get('./data/components.json');\n    const components = this.sortComponents(response.data.components);\n    components.forEach((component) => addRecord( component ));\n    return components;\n  }\n  /**\n   * Sort components by lowercase title\n   * @param components array of components to srt\n   */\n  private sortComponents(components: Array<any>) {\n    return components.sort((a, b) => {\n      return a.title.toLowerCase() > b.title.toLowerCase() ? 1 : -1;\n    });\n  }\n\n  /**\n   * Small function to check if filters are empty or not\n   * @param filters \n   */\n  private checkFiltersExist(filters) {\n    return Object.keys(filters)\n      .filter((filterKey) => filters[filterKey].length > 0)\n      .length > 0;\n  }\n  handleSearch() {\n    if(this.query?.length <= 0 && !this.checkFiltersExist(this.filters) ) {\n      this.filteredComponents = this.components;\n    } else {\n      this.filteredComponents = search( this.query, this.filters );\n    }\n  }\n\n  @Watch('query')\n  handleQuery(query: string) {\n    this.query = query;\n    this.handleSearch()\n  }\n\n  @Watch('filters')\n  handleFilterUpdated( filters:SearchFilters = {} ) {\n    this.filters = filters;\n    this.handleSearch();    \n  }\n\n  render() {\n    return (\n      <div class=\"gallery-container\">\n        <component-gallery-search-input\n          query={this.query}\n          onSearch={(event) => this.handleQuery(event.detail)}\n        ></component-gallery-search-input>\n        <component-gallery-filter-sidebar\n          filters={this.filterOptions}\n          onFiltersUpdated={(event) => this.handleFilterUpdated(event.detail)}\n        ></component-gallery-filter-sidebar>\n        <component-gallery-grid components={this.filteredComponents}></component-gallery-grid>\n      </div>\n    );\n  }\n}\n"]}