{"version":3,"file":"search.js","sourceRoot":"","sources":["../../src/utils/search.ts"],"names":[],"mappings":"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","sourcesContent":["import Fuse from 'fuse.js'\n\nconst fuse = createSearchIndex();\n\nexport function getIndex() {\n  return fuse;\n}\n\nexport function createSearchIndex() {\n  const options = {\n    // isCaseSensitive: false,\n    // includeScore: false,\n    // shouldSort: true,\n    // includeMatches: false,\n    // findAllMatches: false,\n    // minMatchCharLength: 1,\n    // location: 0,\n    threshold: 0.3,\n    // distance: 100,\n    useExtendedSearch: true,\n    // ignoreLocation: false,\n    // ignoreFieldNorm: false,\n    // fieldNormWeight: 1,\n    keys: [\n      \"title\", \n      \"status\",\n      \"type\"\n    ]\n  };\n\n  return new Fuse([], options);\n}\n\nconst filterOptions = {\n  status: [],\n  type: []\n}\n\n// Add to the index and build filters list\nexport function addRecord( record ) {\n  getIndex().add( record );\n  Object.keys(filterOptions).forEach((filter) => {\n    if(filterOptions[filter].indexOf( record[filter] ) === -1) {\n      filterOptions[filter].push(record[filter]);\n    }\n  })\n  \n}\n\nexport function getFilters() {\n  return filterOptions;\n}\n\nexport function buildSearchInput(query = '', filters = {}): Object {\n    // Builds a query like:\n    // $and: [\n    //   { \n    //     $or: [\n    //       { status: 'production' },\n    //       { status: 'developing' } \n    //     ]\n    //   }, \n    //   {\n    //     $or: [\n    //       { type: 'Discussions' }, \n    //       { type: 'Search' } \n    //     ]\n    //   }\n    // ]\n    const and = Object.keys(filters)\n      .filter((filterKey) => filters[filterKey].length > 0)\n      .map((filterKey) => {\n        const or = filters[filterKey].map((value) => {\n          return { [`${filterKey}`]: value }\n        })\n        return or.length > 0 ? { $or: or } : null\n      }) as Array<any>; // TS missing this is building an array\n\n    \n    if(query.length > 0) {\n      and.push({ title: query })\n    }\n\n    console.debug('buildSearchInput', {\n      query: query,\n      filters: filters,\n      and: and\n    })\n    return {$and: and};\n}\nexport function search( query, filters ) {\n  const searchInput = buildSearchInput(query, filters)\n\n  const results = getIndex().search( searchInput );\n  return results.map((result) => result.item);\n\n}\n\nexport type SearchFilters = Record<string, Array<string>>;"]}