{"file":"locale-85368e13.js","mappings":"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","names":["numberKeys","createObserver","containsCrossShadowBoundary","closestElementCrossShadowBoundary"],"sources":["./node_modules/@esri/calcite-components/dist/collection/utils/number.js","./node_modules/@esri/calcite-components/dist/collection/utils/locale.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { numberKeys } from \"./key\";\nconst unnecessaryDecimal = new RegExp(`\\\\${\".\"}(0+)?$`);\nconst trailingZeros = new RegExp(\"0+$\");\n// adopted from https://stackoverflow.com/a/66939244\nexport class BigDecimal {\n  constructor(input) {\n    if (input instanceof BigDecimal) {\n      return input;\n    }\n    const [integers, decimals] = expandExponentialNumberString(input).split(\".\").concat(\"\");\n    this.value =\n      BigInt(integers + decimals.padEnd(BigDecimal.DECIMALS, \"0\").slice(0, BigDecimal.DECIMALS)) +\n        BigInt(BigDecimal.ROUNDED && decimals[BigDecimal.DECIMALS] >= \"5\");\n    this.isNegative = input.charAt(0) === \"-\";\n  }\n  getIntegersAndDecimals() {\n    const s = this.value\n      .toString()\n      .replace(\"-\", \"\")\n      .padStart(BigDecimal.DECIMALS + 1, \"0\");\n    const integers = s.slice(0, -BigDecimal.DECIMALS);\n    const decimals = s.slice(-BigDecimal.DECIMALS).replace(trailingZeros, \"\");\n    return { integers, decimals };\n  }\n  toString() {\n    const { integers, decimals } = this.getIntegersAndDecimals();\n    return `${this.isNegative ? \"-\" : \"\"}${integers}${decimals.length ? \".\" + decimals : \"\"}`;\n  }\n  formatToParts(formatter) {\n    const { integers, decimals } = this.getIntegersAndDecimals();\n    const parts = formatter.numberFormatter.formatToParts(BigInt(integers));\n    this.isNegative && parts.unshift({ type: \"minusSign\", value: formatter.minusSign });\n    if (decimals.length) {\n      parts.push({ type: \"decimal\", value: formatter.decimal });\n      decimals.split(\"\").forEach((char) => parts.push({ type: \"fraction\", value: char }));\n    }\n    return parts;\n  }\n  format(formatter) {\n    const { integers, decimals } = this.getIntegersAndDecimals();\n    const integersFormatted = `${this.isNegative ? formatter.minusSign : \"\"}${formatter.numberFormatter.format(BigInt(integers))}`;\n    const decimalsFormatted = decimals.length\n      ? `${formatter.decimal}${decimals\n        .split(\"\")\n        .map((char) => formatter.numberFormatter.format(Number(char)))\n        .join(\"\")}`\n      : \"\";\n    return `${integersFormatted}${decimalsFormatted}`;\n  }\n  add(n) {\n    return BigDecimal.fromBigInt(this.value + new BigDecimal(n).value);\n  }\n  subtract(n) {\n    return BigDecimal.fromBigInt(this.value - new BigDecimal(n).value);\n  }\n  multiply(n) {\n    return BigDecimal._divRound(this.value * new BigDecimal(n).value, BigDecimal.SHIFT);\n  }\n  divide(n) {\n    return BigDecimal._divRound(this.value * BigDecimal.SHIFT, new BigDecimal(n).value);\n  }\n}\n// Configuration: constants\nBigDecimal.DECIMALS = 100; // number of decimals on all instances\nBigDecimal.ROUNDED = true; // numbers are truncated (false) or rounded (true)\nBigDecimal.SHIFT = BigInt(\"1\" + \"0\".repeat(BigDecimal.DECIMALS)); // derived constant\nBigDecimal._divRound = (dividend, divisor) => BigDecimal.fromBigInt(dividend / divisor + (BigDecimal.ROUNDED ? ((dividend * BigInt(2)) / divisor) % BigInt(2) : BigInt(0)));\nBigDecimal.fromBigInt = (bigint) => Object.assign(Object.create(BigDecimal.prototype), { value: bigint, isNegative: bigint < BigInt(0) });\nexport function isValidNumber(numberString) {\n  return !(!numberString || isNaN(Number(numberString)));\n}\nexport function parseNumberString(numberString) {\n  if (!numberString || !stringContainsNumbers(numberString)) {\n    return \"\";\n  }\n  return sanitizeExponentialNumberString(numberString, (nonExpoNumString) => {\n    let containsDecimal = false;\n    const result = nonExpoNumString\n      .split(\"\")\n      .filter((value, i) => {\n      if (value.match(/\\./g) && !containsDecimal) {\n        containsDecimal = true;\n        return true;\n      }\n      if (value.match(/\\-/g) && i === 0) {\n        return true;\n      }\n      return numberKeys.includes(value);\n    })\n      .reduce((string, part) => string + part);\n    return isValidNumber(result) ? new BigDecimal(result).toString() : \"\";\n  });\n}\n// regex for number sanitization\nconst allLeadingZerosOptionallyNegative = /^([-0])0+(?=\\d)/;\nconst decimalOnlyAtEndOfString = /(?!^\\.)\\.$/;\nconst allHyphensExceptTheStart = /(?!^-)-/g;\nconst isNegativeDecimalOnlyZeros = /^-\\b0\\b\\.?0*$/;\nexport const sanitizeNumberString = (numberString) => sanitizeExponentialNumberString(numberString, (nonExpoNumString) => {\n  const sanitizedValue = nonExpoNumString\n    .replace(allHyphensExceptTheStart, \"\")\n    .replace(decimalOnlyAtEndOfString, \"\")\n    .replace(allLeadingZerosOptionallyNegative, \"$1\");\n  return isValidNumber(sanitizedValue)\n    ? isNegativeDecimalOnlyZeros.test(sanitizedValue)\n      ? sanitizedValue\n      : new BigDecimal(sanitizedValue).toString()\n    : nonExpoNumString;\n});\nexport function sanitizeExponentialNumberString(numberString, func) {\n  if (!numberString) {\n    return numberString;\n  }\n  const firstE = numberString.toLowerCase().indexOf(\"e\") + 1;\n  if (!firstE) {\n    return func(numberString);\n  }\n  return numberString\n    .replace(/[eE]*$/g, \"\")\n    .substring(0, firstE)\n    .concat(numberString.slice(firstE).replace(/[eE]/g, \"\"))\n    .split(/[eE]/)\n    .map((section, i) => (i === 1 ? func(section.replace(/\\./g, \"\")) : func(section)))\n    .join(\"e\")\n    .replace(/^e/, \"1e\");\n}\n/**\n * Converts an exponential notation numberString into decimal notation.\n * BigInt doesn't support exponential notation, so this is required to maintain precision\n *\n * @param {string} numberString - pre-validated exponential or decimal number\n * @returns {string} numberString in decimal notation\n */\nexport function expandExponentialNumberString(numberString) {\n  const exponentialParts = numberString.split(/[eE]/);\n  if (exponentialParts.length === 1) {\n    return numberString;\n  }\n  const number = +numberString;\n  if (Number.isSafeInteger(number)) {\n    return `${number}`;\n  }\n  const isNegative = numberString.charAt(0) === \"-\";\n  const magnitude = +exponentialParts[1];\n  const decimalParts = exponentialParts[0].split(\".\");\n  const integers = (isNegative ? decimalParts[0].substring(1) : decimalParts[0]) || \"\";\n  const decimals = decimalParts[1] || \"\";\n  const shiftDecimalLeft = (integers, magnitude) => {\n    const magnitudeDelta = Math.abs(magnitude) - integers.length;\n    const leftPaddedZeros = magnitudeDelta > 0 ? `${\"0\".repeat(magnitudeDelta)}${integers}` : integers;\n    const shiftedDecimal = `${leftPaddedZeros.slice(0, magnitude)}${\".\"}${leftPaddedZeros.slice(magnitude)}`;\n    return shiftedDecimal;\n  };\n  const shiftDecimalRight = (decimals, magnitude) => {\n    const rightPaddedZeros = magnitude > decimals.length ? `${decimals}${\"0\".repeat(magnitude - decimals.length)}` : decimals;\n    const shiftedDecimal = `${rightPaddedZeros.slice(0, magnitude)}${\".\"}${rightPaddedZeros.slice(magnitude)}`;\n    return shiftedDecimal;\n  };\n  const expandedNumberString = magnitude > 0\n    ? `${integers}${shiftDecimalRight(decimals, magnitude)}`\n    : `${shiftDecimalLeft(integers, magnitude)}${decimals}`;\n  return `${isNegative ? \"-\" : \"\"}${expandedNumberString.charAt(0) === \".\" ? \"0\" : \"\"}${expandedNumberString\n    .replace(unnecessaryDecimal, \"\")\n    .replace(allLeadingZerosOptionallyNegative, \"\")}`;\n}\nfunction stringContainsNumbers(string) {\n  return numberKeys.some((number) => string.includes(number));\n}\n","/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-components/blob/master/LICENSE.md for details.\n * v1.2.0\n */\nimport { closestElementCrossShadowBoundary, containsCrossShadowBoundary } from \"./dom\";\nimport { BigDecimal, isValidNumber, sanitizeExponentialNumberString } from \"./number\";\nimport { createObserver } from \"./observers\";\nexport const defaultLocale = \"en\";\nexport const t9nLocales = [\n  \"ar\",\n  \"bg\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"da\",\n  \"de\",\n  \"el\",\n  defaultLocale,\n  \"es\",\n  \"et\",\n  \"fi\",\n  \"fr\",\n  \"he\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"ja\",\n  \"ko\",\n  \"lt\",\n  \"lv\",\n  \"no\",\n  \"nl\",\n  \"pl\",\n  \"pt-BR\",\n  \"pt-PT\",\n  \"ro\",\n  \"ru\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"th\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-CN\",\n  \"zh-HK\",\n  \"zh-TW\"\n];\nexport const locales = [\n  \"ar\",\n  \"bg\",\n  \"bs\",\n  \"ca\",\n  \"cs\",\n  \"da\",\n  \"de\",\n  \"de-CH\",\n  \"el\",\n  defaultLocale,\n  \"en-AU\",\n  \"en-CA\",\n  \"en-GB\",\n  \"es\",\n  \"es-MX\",\n  \"et\",\n  \"fi\",\n  \"fr\",\n  \"fr-CH\",\n  \"he\",\n  \"hi\",\n  \"hr\",\n  \"hu\",\n  \"id\",\n  \"it\",\n  \"it-CH\",\n  \"ja\",\n  \"ko\",\n  \"lt\",\n  \"lv\",\n  \"mk\",\n  \"no\",\n  \"nl\",\n  \"pl\",\n  \"pt\",\n  \"pt-PT\",\n  \"ro\",\n  \"ru\",\n  \"sk\",\n  \"sl\",\n  \"sr\",\n  \"sv\",\n  \"th\",\n  \"tr\",\n  \"uk\",\n  \"vi\",\n  \"zh-CN\",\n  \"zh-HK\",\n  \"zh-TW\"\n];\nexport const numberingSystems = [\n  \"arab\",\n  \"arabext\",\n  \"bali\",\n  \"beng\",\n  \"deva\",\n  \"fullwide\",\n  \"gujr\",\n  \"guru\",\n  \"hanidec\",\n  \"khmr\",\n  \"knda\",\n  \"laoo\",\n  \"latn\",\n  \"limb\",\n  \"mlym\",\n  \"mong\",\n  \"mymr\",\n  \"orya\",\n  \"tamldec\",\n  \"telu\",\n  \"thai\",\n  \"tibt\"\n];\nexport const supportedLocales = [...new Set([...t9nLocales, ...locales])];\nconst isNumberingSystemSupported = (numberingSystem) => numberingSystems.includes(numberingSystem);\nconst browserNumberingSystem = new Intl.NumberFormat().resolvedOptions().numberingSystem;\nexport const defaultNumberingSystem = browserNumberingSystem === \"arab\" || !isNumberingSystemSupported(browserNumberingSystem)\n  ? \"latn\"\n  : browserNumberingSystem;\nexport const getSupportedNumberingSystem = (numberingSystem) => isNumberingSystemSupported(numberingSystem) ? numberingSystem : defaultNumberingSystem;\n/**\n * Gets the locale that best matches the context.\n *\n * @param locale – the BCP 47 locale code\n * @param context - specifies whether the locale code should match in the context of CLDR or T9N (translation)\n */\nexport function getSupportedLocale(locale, context = \"cldr\") {\n  const contextualLocales = context === \"cldr\" ? locales : t9nLocales;\n  if (!locale) {\n    return defaultLocale;\n  }\n  if (contextualLocales.includes(locale)) {\n    return locale;\n  }\n  locale = locale.toLowerCase();\n  // we support both 'nb' and 'no' (BCP 47) for Norwegian but only `no` has corresponding bundle\n  if (locale === \"nb\") {\n    return \"no\";\n  }\n  // we use `pt-BR` as it will have the same translations as `pt`, which has no corresponding bundle\n  if (context === \"t9n\" && locale === \"pt\") {\n    return \"pt-BR\";\n  }\n  if (locale.includes(\"-\")) {\n    locale = locale.replace(/(\\w+)-(\\w+)/, (_match, language, region) => `${language}-${region.toUpperCase()}`);\n    if (!contextualLocales.includes(locale)) {\n      locale = locale.split(\"-\")[0];\n    }\n  }\n  // we can `zh-CN` as base translation for chinese locales which has no corresponding bundle.\n  if (locale === \"zh\") {\n    return \"zh-CN\";\n  }\n  if (!contextualLocales.includes(locale)) {\n    console.warn(`Translations for the \"${locale}\" locale are not available and will fall back to the default, English (en).`);\n    return defaultLocale;\n  }\n  return locale;\n}\nconst connectedComponents = new Set();\n/**\n * This utility sets up internals for messages support.\n *\n * It needs to be called in `connectedCallback` before any logic that depends on locale\n *\n * @param component\n */\nexport function connectLocalized(component) {\n  updateEffectiveLocale(component);\n  if (connectedComponents.size === 0) {\n    mutationObserver?.observe(document.documentElement, {\n      attributes: true,\n      attributeFilter: [\"lang\"],\n      subtree: true\n    });\n  }\n  connectedComponents.add(component);\n}\n/**\n * This is only exported for components that implemented the now deprecated `locale` prop.\n *\n * Do not use this utils for new components.\n *\n * @param component\n */\nexport function updateEffectiveLocale(component) {\n  component.effectiveLocale = getLocale(component);\n}\n/**\n * This utility tears down internals for messages support.\n *\n * It needs to be called in `disconnectedCallback`\n *\n * @param component\n */\nexport function disconnectLocalized(component) {\n  connectedComponents.delete(component);\n  if (connectedComponents.size === 0) {\n    mutationObserver.disconnect();\n  }\n}\nconst mutationObserver = createObserver(\"mutation\", (records) => {\n  records.forEach((record) => {\n    const el = record.target;\n    connectedComponents.forEach((component) => {\n      const inUnrelatedSubtree = !containsCrossShadowBoundary(el, component.el);\n      if (inUnrelatedSubtree) {\n        return;\n      }\n      const closestLangEl = closestElementCrossShadowBoundary(component.el, \"[lang]\");\n      if (!closestLangEl) {\n        component.effectiveLocale = defaultLocale;\n        return;\n      }\n      const closestLang = closestLangEl.lang;\n      component.effectiveLocale =\n        // user set lang=\"\" means unknown language, so we use default\n        closestLangEl.hasAttribute(\"lang\") && closestLang === \"\" ? defaultLocale : closestLang;\n    });\n  });\n});\n/**\n * This util helps resolve a component's locale.\n * It will also fall back on the deprecated `locale` if a component implemented this previously.\n *\n * @param component\n */\nfunction getLocale(component) {\n  return (component.el.lang ||\n    closestElementCrossShadowBoundary(component.el, \"[lang]\")?.lang ||\n    document.documentElement.lang ||\n    defaultLocale);\n}\n/**\n * This util formats and parses numbers for localization\n */\nexport class NumberStringFormat {\n  constructor() {\n    this.delocalize = (numberString) => \n    // For performance, (de)localization is skipped if the formatter isn't initialized.\n    // In order to localize/delocalize, e.g. when lang/numberingSystem props are not default values,\n    // `numberFormatOptions` must be set in a component to create and cache the formatter.\n    this._numberFormatOptions\n      ? sanitizeExponentialNumberString(numberString, (nonExpoNumString) => nonExpoNumString\n        .trim()\n        .replace(new RegExp(`[${this._minusSign}]`, \"g\"), \"-\")\n        .replace(new RegExp(`[${this._group}]`, \"g\"), \"\")\n        .replace(new RegExp(`[${this._decimal}]`, \"g\"), \".\")\n        .replace(new RegExp(`[${this._digits.join(\"\")}]`, \"g\"), this._getDigitIndex))\n      : numberString;\n    this.localize = (numberString) => this._numberFormatOptions\n      ? sanitizeExponentialNumberString(numberString, (nonExpoNumString) => isValidNumber(nonExpoNumString.trim())\n        ? new BigDecimal(nonExpoNumString.trim())\n          .format(this)\n          .replace(new RegExp(`[${this._actualGroup}]`, \"g\"), this._group)\n        : nonExpoNumString)\n      : numberString;\n  }\n  get group() {\n    return this._group;\n  }\n  get decimal() {\n    return this._decimal;\n  }\n  get minusSign() {\n    return this._minusSign;\n  }\n  get digits() {\n    return this._digits;\n  }\n  get numberFormatter() {\n    return this._numberFormatter;\n  }\n  get numberFormatOptions() {\n    return this._numberFormatOptions;\n  }\n  /**\n   * numberFormatOptions needs to be set before localize/delocalize is called to ensure the options are up to date\n   */\n  set numberFormatOptions(options) {\n    options.locale = getSupportedLocale(options?.locale);\n    options.numberingSystem = getSupportedNumberingSystem(options?.numberingSystem);\n    if (\n    // No need to create the formatter if `locale` and `numberingSystem`\n    // are the default values and `numberFormatOptions` has not been set\n    (!this._numberFormatOptions &&\n      options.locale === defaultLocale &&\n      options.numberingSystem === defaultNumberingSystem &&\n      // don't skip initialization if any options besides locale/numberingSystem are set\n      Object.keys(options).length === 2) ||\n      // cache formatter by only recreating when options change\n      JSON.stringify(this._numberFormatOptions) === JSON.stringify(options)) {\n      return;\n    }\n    this._numberFormatOptions = options;\n    this._numberFormatter = new Intl.NumberFormat(this._numberFormatOptions.locale, this._numberFormatOptions);\n    this._digits = [\n      ...new Intl.NumberFormat(this._numberFormatOptions.locale, {\n        useGrouping: false,\n        numberingSystem: this._numberFormatOptions.numberingSystem\n      }).format(9876543210)\n    ].reverse();\n    const index = new Map(this._digits.map((d, i) => [d, i]));\n    const parts = new Intl.NumberFormat(this._numberFormatOptions.locale).formatToParts(-12345678.9);\n    this._actualGroup = parts.find((d) => d.type === \"group\").value;\n    // change whitespace group characters that don't render correctly\n    this._group = this._actualGroup.trim().length === 0 ? \" \" : this._actualGroup;\n    this._decimal = parts.find((d) => d.type === \"decimal\").value;\n    this._minusSign = parts.find((d) => d.type === \"minusSign\").value;\n    this._getDigitIndex = (d) => index.get(d);\n  }\n}\nexport const numberStringFormatter = new NumberStringFormat();\n"],"version":3}