{"file":"component-gallery-filter-sidebar2.js","mappings":";;;;;;AAAA,MAAM,gCAAgC,GAAG,iOAAiO;;MCQ7P,6BAA6B;;;;;;IAK9B,cAAS,GAAyC,EAAE,CAAC;mBAJZ,EAAE;;EAOnD,eAAe,CAAC,MAAM;IACpB,MAAM,OAAO,GAAG;MACd,IAAI,EAAE,EAAE;MACR,MAAM,EAAE,EAAE;KACX,CAAC;IAEF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,MAAM;MACvC,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC;SAC1D,MAAM,CAAC,CAAC,IAA+B,KAAK,IAAI,CAAC,QAAQ,CAAC;SAC1D,GAAG,CAAC,CAAC,IAA+B,KAAK,IAAI,CAAC,SAAS,CAAC,CAAA;KAE5D,CAAC,CAAA;IAEF,IAAI,CAAC,cAAc,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;GACrC;EAID,MAAM;IACJ,QACE,WAAK,KAAK,EAAC,SAAS,IACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,MAAM;MACpC,QACE,WAAK,KAAK,EAAC,QAAQ,IACjB,YAAM,KAAK,EAAC,aAAa,kBAAY,MAAM,CAAQ,EACnD,oBAAc,GAAG,EAAE,CAAC,EAAE,KAAK,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,EAAE,oBAAiB,UAAU,IAC9E,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM;QACtC,OAAO,6BAAoB,MAAM,CAAqB,CAAA;OACvD,CAAC,CACW,CACX,EACP;KACF,CAAC,CACE,EACN;GACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":[],"sources":["./src/components/component-gallery-filter-sidebar/component-gallery-filter-sidebar.css?tag=component-gallery-filter-sidebar&encapsulation=shadow","./src/components/component-gallery-filter-sidebar/component-gallery-filter-sidebar.tsx"],"sourcesContent":[".sidebar {\n  width: 200px;\n  float: left;\n  padding-right: 1rem;\n  box-sizing: border-box;\n}\n\n.filter {\n  margin-top: 2rem;\n}\n\n.filterTitle {\n  font-weight: 500;\n}\n\nh3 {\n  margin-top: 0;\n}\n\nselect {\n  display: block;\n  margin-bottom: 1rem;\n  padding: 0.5rem;\n  font-size: 1rem;\n  width: 100%;\n}\n","import { Component, h, Event, EventEmitter, Listen, Prop } from '@stencil/core';\nimport { SearchFilters } from '../../utils/search';\n\n@Component({\n  tag: 'component-gallery-filter-sidebar',\n  styleUrl: 'component-gallery-filter-sidebar.css',\n  shadow: true,\n})\nexport class ComponentGalleryFilterSidebar {\n    @Prop() filters: Record<string, Array<string>> = {};\n\n    @Event() filtersUpdated: EventEmitter<SearchFilters>;\n    \n    private filtersEl:Record<string,HTMLCalciteTreeElement> = {};\n\n    @Listen('calciteTreeSelect')\n    onFilterChanged(_event) {\n      const filters = {\n        type: [],\n        status: []\n      };\n      \n      Object.keys(this.filters).forEach((filter) => {\n        filters[filter] = Array.from(this.filtersEl[filter].children)\n          .filter((node:HTMLCalciteTreeItemElement) => node.selected)\n          .map((node:HTMLCalciteTreeItemElement) => node.innerText)\n\n      })\n\n      this.filtersUpdated.emit( filters );\n    }\n  \n\n  \n    render() {\n      return (\n        <div class=\"sidebar\">\n          {Object.keys(this.filters).map((filter) => {\n            return (\n              <div class=\"filter\">\n                <span class=\"filterTitle\">Filter by {filter}</span>\n                <calcite-tree ref={(el) => this.filtersEl[filter] = el} selection-mode=\"multiple\">\n                  {this.filters[filter].sort().map((option) => {\n                    return <calcite-tree-item>{option}</calcite-tree-item>\n                  })}\n                </calcite-tree>\n              </div>\n            )\n          })}\n        </div>\n      );\n    }\n  }\n  "],"version":3}